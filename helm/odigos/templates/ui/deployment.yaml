apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-ui
    odigos.io/system-object: "true"
  name: odigos-ui
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odigos-ui
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: ui
      labels:
        app: odigos-ui
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range .Values.topologySpreadConstraints }}
        - maxSkew: {{ .maxSkew }}
          topologyKey: {{ .topologyKey | quote }}
          whenUnsatisfiable: {{ .whenUnsatisfiable | quote }}
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: odigos-ui
        {{- end }}
      {{- end }}
      containers:
      - name: ui
        {{ $imageTag := .Values.image.tag | default .Chart.AppVersion }}
        image: {{ template "utils.imageName" (dict "Values" .Values "Component" "ui" "Tag" $imageTag) }}
        args:
          - --namespace=$(CURRENT_NS)
          - --address=0.0.0.0
        env:
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.ui.centralBackendURL }}
          - name: CENTRAL_BACKEND_WS_URL
            valueFrom:
              configMapKeyRef:
                name: odigos-configuration
                key: centralBackendURL
          {{- end }}
        ports:
          - containerPort: 3000
            name: ui
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 3000
          periodSeconds: 10
        resources:
{{ toYaml .Values.ui.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: ui-db-storage
            mountPath: /data
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-ui
      terminationGracePeriodSeconds: 10
      volumes:
        - name: ui-db-storage
          emptyDir:
            sizeLimit: 50Mi
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end }}
{{- with .Values.ui }}
  {{- if .nodeSelector }}
      nodeSelector: {{ toYaml .nodeSelector | nindent 8 }}
  {{- end }}
  {{- if .tolerations }}
      tolerations: {{ toYaml .tolerations | nindent 8 }}
  {{- end }}
  {{- if .affinity }}
      affinity: {{ toYaml .affinity | nindent 8 }}
  {{- end }}
{{- end }}
