apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-scheduler
    odigos.io/system-object: "true"
  name: odigos-scheduler
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: odigos-scheduler
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: odigos-scheduler
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range .Values.topologySpreadConstraints }}
        - maxSkew: {{ .maxSkew }}
          topologyKey: {{ .topologyKey | quote }}
          whenUnsatisfiable: {{ .whenUnsatisfiable | quote }}
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: odigos-scheduler
        {{- end }}
      {{- end }}
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=0.0.0.0:8080
          - --leader-elect
        command:
          - /app
        {{ $imageTag := .Values.image.tag | default .Chart.AppVersion }}
        image: {{ template "utils.imageName" (dict "Values" .Values "Component" "scheduler" "Tag" $imageTag) }}
        env:
          - name: OTEL_SERVICE_NAME
            value: scheduler
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ODIGOS_TIER
            valueFrom:
              configMapKeyRef:
                key: ODIGOS_TIER
                name: odigos-deployment
          - name: ODIGOS_VERSION
            valueFrom:
              configMapKeyRef:
                key: ODIGOS_VERSION
                name: odigos-deployment
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          periodSeconds: 10
        name: manager
        resources:
{{ toYaml .Values.scheduler.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-scheduler
      terminationGracePeriodSeconds: 10
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end }}
{{- with .Values.scheduler }}
  {{- if .nodeSelector }}
      nodeSelector: {{ toYaml .nodeSelector | nindent 8 }}
  {{- end }}
  {{- if .tolerations }}
      tolerations: {{ toYaml .tolerations | nindent 8 }}
  {{- end }}
  {{- if .affinity }}
      affinity: {{ toYaml .affinity | nindent 8 }}
  {{- end }}
{{- end }}
