---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: instrumentationconfigs.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentationConfig
    listKind: InstrumentationConfigList
    plural: instrumentationconfigs
    singular: instrumentationconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstrumentationConfig is the Schema for the instrumentationconfig
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Config for the OpenTelemeetry SDKs that should be applied to a workload.
              The workload is identified by the owner reference
            properties:
              agentInjectionEnabled:
                description: determines if odigos should inject agents to pods of
                  this workload.
                type: boolean
              agentsMetaHash:
                description: |-
                  this hash is used to determine the deployment of the agents.
                  e.g. when the distro for container changes, or it's compatibility version,
                  or something else that requires rollout, the hash change will indicate that.
                  if the hash is empty, it means that no agent should be enabled in any pod container.
                type: string
              containerOverridesHash:
                description: |-
                  An hash of the containers overrides, used to determine if the overrides have changed for event filtering.
                  this is updated only when the overrides are changed, and not when some other change in the source occurs.
                type: string
              containers:
                description: configuration for each instrumented container in the
                  workload
                items:
                  description: ContainerAgentConfig is a configuration for a specific
                    container in a workload.
                  properties:
                    agentEnabled:
                      description: boolean flag to indicate if the agent should be
                        enabled for this container.
                      type: boolean
                    agentEnabledMessage:
                      description: |-
                        free text message to provide more information about the instrumentation decision.
                        can be left empty if reason is self-explanatory.
                      type: string
                    agentEnabledReason:
                      description: An enum reason for the agent injection decision.
                      enum:
                      - EnabledSuccessfully
                      - WaitingForRuntimeInspection
                      - WaitingForNodeCollector
                      - NoCollectedSignals
                      - UnsupportedProgrammingLanguage
                      - IgnoredContainer
                      - NoAvailableAgent
                      - UnsupportedRuntimeVersion
                      - MissingDistroParameter
                      - OtherAgentDetected
                      - RuntimeDetailsUnavailable
                      - CrashLoopBackOff
                      type: string
                    containerName:
                      description: The name of the container to which this configuration
                        applies.
                      type: string
                    distroParams:
                      additionalProperties:
                        type: string
                      description: |-
                        Additional parameters to the distro that controls how it's being applied.
                        Keys are parameter names (like "libc") and values are the value to use for that parameter (glibc / musl)
                      type: object
                    logs:
                      description: |-
                        all "logs" related configuration for an agent running on any process in a specific container.
                        The presence of this struct (as opposed to nil) means that logs collection is enabled for this container.
                      type: object
                    metrics:
                      description: |-
                        all "metrics" related configuration for an agent running on any process in a specific container.
                        The presence of this struct (as opposed to nil) means that metrics collection is enabled for this container.
                      type: object
                    otelDistroName:
                      description: |-
                        The name of the otel distribution to use for this container.
                        if the name is empty, this container should not be instrumented.
                      type: string
                    traces:
                      description: |-
                        Each enabled signal must be set with a non-nil value (even if the config content is empty).
                        nil means that the signal is disabled and should not be instrumented/collected by the agent.
                      type: object
                  required:
                  - agentEnabled
                  - containerName
                  type: object
                type: array
              containersOverrides:
                description: |-
                  will always list all containers of this workload by name,
                  and override data in case it is configured on the source.
                  this peoperty can be used to know all container names in the workload, even if other controllers did not yet run.
                items:
                  properties:
                    containerName:
                      description: The name of the container to override.
                      type: string
                    runtimeInfo:
                      description: |-
                        RuntimeInfo to use for agent enabling.
                        If set for a container, the automatic detection will not be used for this container,
                        and the distro to use will be calculated based on this value.
                      properties:
                        containerName:
                          type: string
                        criErrorMessage:
                          description: Stores the error message from the CRI runtime
                            if returned to prevent instrumenting the container if
                            an error exists.
                          type: string
                        envFromContainerRuntime:
                          description: Holds the environment variables retrieved from
                            the container runtime.
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        envVars:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        language:
                          enum:
                          - java
                          - python
                          - go
                          - dotnet
                          - javascript
                          - php
                          - ruby
                          - rust
                          - cplusplus
                          - mysql
                          - nginx
                          - redis
                          - postgres
                          - unknown
                          - ignored
                          type: string
                        libCType:
                          enum:
                          - glibc
                          - musl
                          type: string
                        otherAgent:
                          properties:
                            name:
                              type: string
                          type: object
                        runtimeUpdateState:
                          description: A temporary variable used during migration
                            to track whether the new runtime detection process has
                            been executed. If empty, it indicates the process has
                            not yet been run. This field may be removed later.
                          type: string
                        runtimeVersion:
                          type: string
                        secureExecutionMode:
                          description: |-
                            Indicates whether the target process is running is secure-execution mode.
                            nil means we were unable to determine the secure-execution mode.
                          type: boolean
                      required:
                      - containerName
                      - language
                      type: object
                  required:
                  - containerName
                  type: object
                type: array
              sdkConfigs:
                description: |-
                  Configuration for the OpenTelemetry SDKs that this workload should use.
                  The SDKs are identified by the programming language they are written in.
                items:
                  properties:
                    codeAttributes:
                      description: default configuration for collecting code attributes,
                        in case the instrumentation library does not provide a configuration.
                      properties:
                        column:
                          description: |-
                            Should record the `code.column` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        filePath:
                          description: |-
                            Should record the `code.filepath` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        function:
                          description: |-
                            Should record the `code.function` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        lineNumber:
                          description: |-
                            Should record the `code.lineno` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        namespace:
                          description: |-
                            Should record the `code.namespace` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        stackTrace:
                          description: |-
                            Should record the `code.stacktrace` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                      type: object
                    customInstrumentations:
                      description: default configuration for custom instrumentations,
                        in case the instrumentation library does not provide a configuration.
                      properties:
                        probes:
                          description: Custom instrumentation probes to be added to
                            the SDK.
                          items:
                            properties:
                              className:
                                type: string
                              methodName:
                                type: string
                            type: object
                          type: array
                      type: object
                    headSamplerConfig:
                      description: |-
                        HeadSamplingConfig is a set sampling rules.
                        This config currently only applies to root spans.
                        In the Future we might add another level of configuration base on the parent span (ParentBased Sampling)
                      properties:
                        attributesAndSamplerRules:
                          items:
                            description: |-
                              AttributesAndSamplerRule is a set of AttributeCondition that are ANDed together.
                              If all attribute conditions evaluate to true, the AND sampler evaluates to true,
                              and the fraction is used to determine the sampling decision.
                              If any of the attribute compare samplers evaluate to false,
                              the fraction is not used and the rule is skipped.
                              An "empty" AttributesAndSamplerRule with no attribute conditions is considered to always evaluate to true.
                              and the fraction is used to determine the sampling decision.
                              This entity is refered to a rule in Odigos terminology for head-sampling.
                            properties:
                              attributeConditions:
                                items:
                                  description: '''Operand'' represents the attributes
                                    and values that an operator acts upon in an expression'
                                  properties:
                                    key:
                                      description: attribute key (e.g. "url.path")
                                      type: string
                                    operator:
                                      description: The operator to use to compare
                                        the attribute value.
                                      enum:
                                      - equals
                                      - notEquals
                                      - endWith
                                      - startWith
                                      type: string
                                    val:
                                      description: currently only string values are
                                        supported.
                                      type: string
                                  required:
                                  - key
                                  - val
                                  type: object
                                type: array
                              fraction:
                                default: 1
                                description: |-
                                  The fraction of spans to sample, in the range [0, 1].
                                  If the fraction is 0, no spans are sampled.
                                  If the fraction is 1, all spans are sampled.
                                type: number
                            required:
                            - attributeConditions
                            - fraction
                            type: object
                          type: array
                        fallbackFraction:
                          default: 1
                          description: |-
                            Used as a fallback if all rules evaluate to false,
                            it may be empty - in this case the default value will be 1 - all spans are sampled.
                            it should be a float value in the range [0, 1] - the fraction of spans to sample.
                            a value of 0 means no spans are sampled if none of the rules evaluate to true.
                          type: number
                      required:
                      - attributesAndSamplerRules
                      - fallbackFraction
                      type: object
                    headersCollection:
                      description: default configuration for collecting http headers,
                        in case the instrumentation library does not provide a configuration.
                      properties:
                        headerKeys:
                          description: Limit payload collection to specific header
                            keys.
                          items:
                            type: string
                          type: array
                      type: object
                    instrumentationLibraryConfigs:
                      description: configurations for the instrumentation libraries
                        the the SDK should use
                      items:
                        properties:
                          codeAttributes:
                            description: |-
                              code attributes configuration for a specific library.
                              if not set, the default code attributes configuration for the workload will be used.
                              if set, but internal fields are empty, those fields will be used from the default configuration.
                            properties:
                              column:
                                description: |-
                                  Should record the `code.column` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              filePath:
                                description: |-
                                  Should record the `code.filepath` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              function:
                                description: |-
                                  Should record the `code.function` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              lineNumber:
                                description: |-
                                  Should record the `code.lineno` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              namespace:
                                description: |-
                                  Should record the `code.namespace` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              stackTrace:
                                description: |-
                                  Should record the `code.stacktrace` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                            type: object
                          headersCollection:
                            properties:
                              headerKeys:
                                description: Limit payload collection to specific
                                  header keys.
                                items:
                                  type: string
                                type: array
                            type: object
                          libraryId:
                            properties:
                              libraryName:
                                description: |-
                                  The name of the instrumentation library
                                  - Node.js: The name of the npm package: `@opentelemetry/instrumentation-<name>`
                                type: string
                              spanKind:
                                description: |-
                                  SpanKind is only supported by Golang and will be ignored for any other SDK language.
                                  In Go, SpanKind is used because the same instrumentation library can be utilized for different span kinds (e.g., client/server).
                                enum:
                                - client
                                - server
                                - producer
                                - consumer
                                - internal
                                type: string
                            required:
                            - libraryName
                            type: object
                          payloadCollection:
                            properties:
                              dbQuery:
                                description: rule for collecting db payloads for the
                                  mentioned workload and instrumentation libraries
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                type: object
                              httpRequest:
                                description: |-
                                  Collect HTTP request payload data when available.
                                  Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                  mimeTypes:
                                    description: |-
                                      Limit payload collection to specific mime types based on the content type header.
                                      When not specified, all mime types payloads will be collected.
                                      Empty array will make the rule ineffective.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpResponse:
                                description: |-
                                  rule for collecting the response part of an http payload.
                                  Can be a client response or a server response, depending on the instrumentation library
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                  mimeTypes:
                                    description: |-
                                      Limit payload collection to specific mime types based on the content type header.
                                      When not specified, all mime types payloads will be collected.
                                      Empty array will make the rule ineffective.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              messaging:
                                description: rule for collecting messaging payloads
                                  for the mentioned workload and instrumentation libraries
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                type: object
                            type: object
                          traceConfig:
                            properties:
                              enabled:
                                description: |-
                                  Whether the instrumentation library is enabled to record traces.
                                  When false, it is expected that the instrumentation library does not produce any spans regardless of any other configuration.
                                  When true, the instrumentation library should produce spans according to the other configuration options.
                                  If not specified, the default value for this signal should be used (whether to enable libraries by default or not).
                                type: boolean
                            type: object
                        required:
                        - libraryId
                        type: object
                      type: array
                    language:
                      description: The language of the SDK being configured
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - php
                      - ruby
                      - rust
                      - cplusplus
                      - mysql
                      - nginx
                      - redis
                      - postgres
                      - unknown
                      - ignored
                      type: string
                    payloadCollection:
                      properties:
                        dbQuery:
                          description: rule for collecting db payloads for the mentioned
                            workload and instrumentation libraries
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                          type: object
                        httpRequest:
                          description: |-
                            Collect HTTP request payload data when available.
                            Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                            mimeTypes:
                              description: |-
                                Limit payload collection to specific mime types based on the content type header.
                                When not specified, all mime types payloads will be collected.
                                Empty array will make the rule ineffective.
                              items:
                                type: string
                              type: array
                          type: object
                        httpResponse:
                          description: |-
                            rule for collecting the response part of an http payload.
                            Can be a client response or a server response, depending on the instrumentation library
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                            mimeTypes:
                              description: |-
                                Limit payload collection to specific mime types based on the content type header.
                                When not specified, all mime types payloads will be collected.
                                Empty array will make the rule ineffective.
                              items:
                                type: string
                              type: array
                          type: object
                        messaging:
                          description: rule for collecting messaging payloads for
                            the mentioned workload and instrumentation libraries
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                          type: object
                      type: object
                    traceConfig:
                      description: default configuration for library tracing.
                      properties:
                        disabled:
                          description: Disabled will disable tracing for the rule.
                          type: boolean
                      type: object
                  required:
                  - language
                  type: object
                type: array
              serviceName:
                description: the service.name property is used to populate the `service.name`
                  resource attribute in the telemetry generated by this workload
                type: string
            required:
            - agentInjectionEnabled
            type: object
          status:
            properties:
              conditions:
                description: Represents the observations of a InstrumentationConfig's
                  current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              instrumentationTime:
                description: |-
                  This time recorded only after the rollout took place.
                  This allows us to determine whether a crashing application should be rolled back or not
                format: date-time
                type: string
              rollbackOccurred:
                description: Check if rollback happened to an application
                type: boolean
              runtimeDetailsByContainer:
                description: Capture Runtime Details for the workloads that this CR
                  applies to.
                items:
                  properties:
                    containerName:
                      type: string
                    criErrorMessage:
                      description: Stores the error message from the CRI runtime if
                        returned to prevent instrumenting the container if an error
                        exists.
                      type: string
                    envFromContainerRuntime:
                      description: Holds the environment variables retrieved from
                        the container runtime.
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    envVars:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    language:
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - php
                      - ruby
                      - rust
                      - cplusplus
                      - mysql
                      - nginx
                      - redis
                      - postgres
                      - unknown
                      - ignored
                      type: string
                    libCType:
                      enum:
                      - glibc
                      - musl
                      type: string
                    otherAgent:
                      properties:
                        name:
                          type: string
                      type: object
                    runtimeUpdateState:
                      description: A temporary variable used during migration to track
                        whether the new runtime detection process has been executed.
                        If empty, it indicates the process has not yet been run. This
                        field may be removed later.
                      type: string
                    runtimeVersion:
                      type: string
                    secureExecutionMode:
                      description: |-
                        Indicates whether the target process is running is secure-execution mode.
                        nil means we were unable to determine the secure-execution mode.
                      type: boolean
                  required:
                  - containerName
                  - language
                  type: object
                type: array
              workloadRolloutHash:
                description: |-
                  This hash is recorded only after the rollout took place.
                  it allows us to determine if the workload needs to be rollout based on previous rollout and the current config.
                  if this field is different than the spec.AgentsDeploymentHash it means rollout is needed or not yet updated.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
