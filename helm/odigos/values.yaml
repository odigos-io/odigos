image:
  tag: ""
imagePullSecrets: []

# namespaces list not to show in odigos ui
# set by default: odigos-system, kube-system, local-path-storage, istio-system, linkerd, kube-node-lease, odigos-system
# you can add additional namespaces to ignore by adding them to the list
ignoredNamespaces:

# container names to never instrument
# useful for sidecars which are not interesting to be instrumented
# set by default: istio-proxy, vault-agent, filebeat, linkerd-proxy, fluentd, akeyless-init
# you can add additional container names to ignore by adding them to the list
ignoredContainers:

collectorGateway:
  # the memory request for the cluster gateway collector deployment.
  # it will be embedded in the deployment as a resource request
  # of the form "memory: <value>Mi".
  # default value is 500Mi
  requestMemoryMiB: 500
  # the memory limit for the cluster gateway collector deployment.
  # it will be embedded in the deployment as a resource limit
  # of the form "memory: <value>Mi".
  # default value is 625Mi
  limitMemoryMiB: 625

  # the CPU request for the cluster gateway collector deployment.
  # it will be embedded in the deployment as a resource request
  # of the form "cpu: <value>m".
  # default value is 500m
  requestCPUm: 500
  # the CPU limit for the cluster gateway collector deployment.
  # it will be embedded in the deployment as a resource limit
  # of the form "cpu: <value>m".
  # default value is 1000m
  limitCPUm: 1000

  # The number of replicas for the cluster gateway collector deployment.
  # Also uses in MinReplicas the HPA config. 
  minReplicas: 1
  # The maxReplicas in the HPA config.
  maxReplicas: 10


  # sets the "limit_mib" parameter in the memory limiter configuration for the collector gateway.
  # it is the hard limit after which a force garbage collection will be performed.
  # if not set, it will be 50Mi below the memory request.
  memoryLimiterLimitMiB: 450
  # sets the "spike_limit_mib" parameter in the memory limiter configuration for the collector gateway.
  # note that this is not the processor soft limit, but the diff in MiB between the hard limit and the soft limit.
  # if not specified, this value will be set to 20% of the hard limit (so the soft limit will be 80% of the hard limit).
  memoryLimiterSpikeLimitMiB: 90
  # the GOMEMLIMIT environment variable value for the collector gateway deployment.
  # this is when go runtime will start garbage collection.
  # if not specified, it will be set to 80% of the hard limit of the memory limiter.
  goMemLimitMiB: 340

collectorNode:
  # The port to use for exposing the collector's own metrics as a prometheus endpoint.
  # This can be used to resolve conflicting ports when a collector is using the host network.
  collectorOwnMetricsPort: 55682

  # RequestMemoryMiB is the memory request for the node collector daemonset.
  # it will be embedded in the daemonset as a resource request of the form "memory: <value>Mi"
  # default value is 250Mi
  requestMemoryMiB: 250

  # LimitMemoryMiB is the memory limit for the node collector daemonset.
  # it will be embedded in the daemonset as a resource limit of the form "memory: <value>Mi"
  # default value is 2x the memory request.
  limitMemoryMiB: 500

  # the CPU request for the node collector daemonset.
  # it will be embedded in the daemonset as a resource request
  # of the form "cpu: <value>m".
  # default value is 250m
  requestCPUm: 250
  # the CPU limit for the node collector daemonset.
  # it will be embedded in the daemonset as a resource limit
  # of the form "cpu: <value>m".
  # default value is 500m
  limitCPUm: 500

  # this parameter sets the "limit_mib" parameter in the memory limiter configuration for the node collector.
  # it is the hard limit after which a force garbage collection will be performed.
  # if not set, it will be 50Mi below the memory limit.
  memoryLimiterLimitMiB: 450

  # this parameter sets the "spike_limit_mib" parameter in the memory limiter configuration for the node collector.
  # note that this is not the processor soft limit, but the diff in Mib between the hard limit and the soft limit.
  # if not set, this will be set to 20% of the hard limit (so the soft limit will be 80% of the hard limit).
  memoryLimiterSpikeLimitMiB: 55

  # the GOMEMLIMIT environment variable value for the node collector daemonset.
  # this is when go runtime will start garbage collection.
  # if not specified, it will be set to 80% of the hard limit of the memory limiter.
  goMemLimitMiB: 360

autoscaler:
  image:
    repository: keyval/odigos-autoscaler
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}

scheduler:
  image:
    repository: keyval/odigos-scheduler
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}

ui:
  image:
    repository: keyval/odigos-ui
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}

instrumentor:
  deleteLangDetectionPods: true
  image:
    repository: keyval/odigos-instrumentor
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}
# skipWebhookIssuerCreation:
#   - This flag controls whether the chart should skip creating an Issuer
#     and associated Certificate for securing the mutating webhook communication.
#   - Setting this to "true" will skip the creation of an Issuer and Certificate, 
#     even if cert-manager is detected in the cluster and the required API version is available.
#   - In some cases, the Issuer and Certificate are necessary for the instrumentor service 
#     to run its pod mutating webhook, which requires a signed certificate to comply with 
#     Kubernetes' TLS requirements.
#   - If cert-manager is not installed or detected, no Issuer or Certificate will be created 
#     regardless of this flag.
  skipWebhookIssuerCreation: false

odiglet:
  image:
    repository: keyval/odigos-odiglet
    enterpriseRepository: keyval/odigos-enterprise-odiglet
  nodeSelector:
    kubernetes.io/os: linux
  tolerations:
    ## This toleration with 'Exists' operator and no key/effect specified 
    ## will match ALL taints, allowing pods to be scheduled on any node 
    ## regardless of its taints (including master/control-plane nodes)
    - operator: Exists
  affinity: {}

cli:
  image:
    repository: keyval/odigos-cli

# Pod Security Policy
psp:
  enabled: false

telemetry:
  enabled: true

openshift:
  enabled: false

gke:
  enabled: false