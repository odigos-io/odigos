---
# Source: odigos/templates/autoscaler/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-autoscaler
  namespace: default
---
# Source: odigos/templates/cleanup/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cleanup-sa
  namespace: default
---
# Source: odigos/templates/datacollection/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-data-collection
  namespace: default
---
# Source: odigos/templates/instrumentor/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-instrumentor
  namespace: default
---
# Source: odigos/templates/odiglet/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odiglet
  namespace: default
---
# Source: odigos/templates/scheduler/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-scheduler
  namespace: default
---
# Source: odigos/templates/ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-ui
  namespace: default
---
# Source: odigos/templates/odiglet/gooffsetsconfigmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-go-offsets
  namespace: default
data:
  "offset_results.json": ""
---
# Source: odigos/templates/odigos-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-deployment
  namespace: 'default'
data:
  ODIGOS_VERSION: 'v0.0.0'
  ODIGOS_TIER: 'community'
  installation-method: helm
  odigos-deployment-id: '211b2aa0-0e3e-4f10-9320-4507218820ad'
---
# Source: odigos/templates/odigos-own-telemetry-otel-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-own-telemetry-otel-config
  namespace: default
data:
  OTEL_SDK_DISABLED: "true"
---
# Source: odigos/templates/crds/actions.odigos.io_addclusterinfos.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: addclusterinfos.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: AddClusterInfo
    listKind: AddClusterInfoList
    plural: addclusterinfos
    shortNames:
    - aci
    singular: addclusterinfo
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AddClusterInfo is the Schema for the addclusterinfo odigos action
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AddClusterInfoSpec defines the desired state of AddClusterInfo
              action
            properties:
              actionName:
                type: string
              clusterAttributes:
                items:
                  properties:
                    attributeName:
                      description: the name of the attribute to insert
                      type: string
                    attributeStringValue:
                      description: |-
                        if the value is a string, this field should be used.
                        empty string is a valid value
                      type: string
                  required:
                  - attributeName
                  - attributeStringValue
                  type: object
                type: array
              disabled:
                type: boolean
              notes:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - clusterAttributes
            - signals
            type: object
          status:
            description: AddClusterInfoStatus defines the observed state of AddClusterInfo
              action
            properties:
              conditions:
                description: |-
                  Represents the observations of a addclusterinfo's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_deleteattributes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: deleteattributes.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: DeleteAttribute
    listKind: DeleteAttributeList
    plural: deleteattributes
    shortNames:
    - da
    singular: deleteattribute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeleteAttribute is the Schema for the DeleteAttribute odigos
          action API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DeleteAttributeSpec defines the desired state of DeleteAttribute
              action
            properties:
              actionName:
                type: string
              attributeNamesToDelete:
                items:
                  type: string
                type: array
              disabled:
                type: boolean
              notes:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - attributeNamesToDelete
            - signals
            type: object
          status:
            description: DeleteAttributeStatus defines the observed state of DeleteAttribute
              action
            properties:
              conditions:
                description: |-
                  Represents the observations of a DeleteAttribute's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_errorsamplers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: errorsamplers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: ErrorSampler
    listKind: ErrorSamplerList
    plural: errorsamplers
    shortNames:
    - es
    singular: errorsampler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ErrorSampler is the Schema for the ErrorSampler CRD.
          It defines sampling logic that always retains traces with errors, and optionally samples
          non-error traces based on the fallback ratio.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ErrorSamplerSpec defines the configuration for an ErrorSampler action.
              This sampler prioritizes traces that contain errors, and allows specifying a fallback sampling ratio
              for traces that do not include any errors.
            properties:
              actionName:
                description: |-
                  ActionName is an optional identifier for this sampler rule.
                  It can be used for referencing, labeling, or displaying the rule in UIs.
                type: string
              disabled:
                description: |-
                  Disabled indicates whether the sampler is currently active.
                  When true, the sampler will not be evaluated or applied.
                type: boolean
              fallback_sampling_ratio:
                description: |-
                  FallbackSamplingRatio determines the percentage (0–100) of non-error traces
                  that should be sampled. Error traces are always sampled.
                type: number
              notes:
                description: Notes provides free-form documentation or context for
                  the user.
                type: string
              signals:
                description: |-
                  Signals specifies the types of telemetry data this sampler should apply to.
                  Typically, this includes "traces", but may also include "logs" or "metrics".
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - fallback_sampling_ratio
            - signals
            type: object
          status:
            description: |-
              ErrorSamplerStatus defines the runtime state and observed conditions of an ErrorSampler.
              It may include conditions such as "Available" or "Progressing".
            properties:
              conditions:
                description: Conditions captures the current operational state of
                  the sampler.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_k8sattributesresolvers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: k8sattributesresolvers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: K8sAttributesResolver
    listKind: K8sAttributesResolverList
    plural: k8sattributesresolvers
    singular: k8sattributesresolver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: K8sAttributesResolver allows adding an action to collect k8s
          attributes.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              actionName:
                type: string
              annotationsAttributes:
                description: list of annotations to be extracted from the pod, and
                  the attribute key to be used for the resource attribute created
                  from each annotation.
                items:
                  properties:
                    annotationKey:
                      description: |-
                        The label name to be extracted from the pod.
                        e.g. "kubectl.kubernetes.io/restartedAt"
                      type: string
                    attributeKey:
                      description: |-
                        The attribute key to be used for the resource attribute created from the label.
                        e.g. "kubectl.kubernetes.restartedAte"
                      type: string
                  required:
                  - annotationKey
                  - attributeKey
                  type: object
                type: array
              collectClusterUID:
                description: Collect the k8s.cluster.uid attribute, which is set to
                  the uid of the namespace "kube-system"
                type: boolean
              collectContainerAttributes:
                description: |-
                  Collect the following container related attributes:
                  k8s.container.name
                  container.id
                  container.image.name
                  container.image.tag
                type: boolean
              collectWorkloadUID:
                description: |-
                  Collect the following workload UID attributes:
                  k8s.deployment.uid
                  k8s.daemonset.uid
                  k8s.statefulset.uid
                type: boolean
              disabled:
                type: boolean
              labelsAttributes:
                description: list of labels to be extracted from the pod, and the
                  attribute key to be used for the resource attribute created from
                  each label.
                items:
                  properties:
                    attributeKey:
                      description: |-
                        The attribute key to be used for the resource attribute created from the label.
                        e.g. "app.kubernetes.name"
                      type: string
                    labelKey:
                      description: |-
                        The label name to be extracted from the pod.
                        e.g. "app.kubernetes.io/name"
                      type: string
                  required:
                  - attributeKey
                  - labelKey
                  type: object
                type: array
              notes:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - signals
            type: object
          status:
            description: K8sAttributesStatus defines the observed state of K8sAttributes
              action
            properties:
              conditions:
                description: |-
                  Represents the observations of a k8sattributes' current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_latencysamplers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: latencysamplers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: LatencySampler
    listKind: LatencySamplerList
    plural: latencysamplers
    shortNames:
    - ls
    singular: latencysampler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          LatencySampler is the Schema for defining latency-based trace sampling rules.
          It supports targeting specific services and HTTP routes and applying latency thresholds
          to determine sampling eligibility.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              LatencySamplerSpec defines the desired state of a LatencySampler.
              This sampler filters traces based on HTTP route and latency thresholds.
              Traces with spans whose latency exceeds the specified threshold will be considered for sampling.
            properties:
              actionName:
                description: |-
                  ActionName is a user-defined identifier for this sampling action.
                  It can be used to reference this policy in UIs or configuration tools.
                type: string
              disabled:
                description: |-
                  Disabled indicates whether the sampler is currently active.
                  When true, this sampler will not be applied.
                type: boolean
              endpoints_filters:
                description: |-
                  EndpointsFilters defines the list of route-based latency sampling filters.
                  Each filter targets a specific service and HTTP route with a latency threshold.
                items:
                  description: HttpRouteFilter defines a single latency-based sampling
                    rule for an HTTP route.
                  properties:
                    fallback_sampling_ratio:
                      description: |-
                        FallbackSamplingRatio is the percentage (0–100) of traces to sample if the route
                        and service match but the span latency is below the threshold.
                      type: number
                    http_route:
                      description: HttpRoute is the route name (from span attribute
                        "http.route") that this rule applies to.
                      type: string
                    minimum_latency_threshold:
                      description: |-
                        MinimumLatencyThreshold is the latency in milliseconds that spans must exceed
                        to be considered for sampling. Spans with latency >= this value are eligible.
                      type: integer
                    service_name:
                      description: |-
                        ServiceName specifies the service that must emit the span for this rule to apply.
                        Matches the value of the "service.name" attribute in the span.
                      type: string
                  required:
                  - fallback_sampling_ratio
                  - http_route
                  - minimum_latency_threshold
                  - service_name
                  type: object
                type: array
              notes:
                description: Notes is an optional field for storing human-readable
                  documentation or context for this sampler.
                type: string
              signals:
                description: |-
                  Signals lists the observability signal types (e.g., traces, metrics, logs)
                  that this sampler applies to.
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - endpoints_filters
            - signals
            type: object
          status:
            description: |-
              LatencySamplerStatus defines the observed state of a LatencySampler.
              It captures runtime status such as readiness or deployment progress.
            properties:
              conditions:
                description: |-
                  Conditions contains the current status conditions for this sampler.
                  Typical types include "Available" and "Progressing".
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_piimaskings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: piimaskings.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: PiiMasking
    listKind: PiiMaskingList
    plural: piimaskings
    shortNames:
    - red
    singular: piimasking
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PiiMasking is the Schema for the PiiMasking odigos action API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PiiMaskingSpec defines the desired state of PiiMasking action
            properties:
              actionName:
                type: string
              disabled:
                type: boolean
              notes:
                type: string
              piiCategories:
                items:
                  enum:
                  - CREDIT_CARD
                  type: string
                type: array
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - piiCategories
            - signals
            type: object
          status:
            description: PiiMaskingStatus defines the observed state of PiiMasking
              action
            properties:
              conditions:
                description: |-
                  Represents the observations of a piiMasking's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_probabilisticsamplers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: probabilisticsamplers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: ProbabilisticSampler
    listKind: ProbabilisticSamplerList
    plural: probabilisticsamplers
    shortNames:
    - ps
    singular: probabilisticsampler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProbabilisticSampler is the Schema for the ProbabilisticSampler
          odigos action API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProbabilisticSamplerSpec defines the desired state of ProbabilisticSampler
              action
            properties:
              actionName:
                type: string
              disabled:
                type: boolean
              notes:
                type: string
              sampling_percentage:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - sampling_percentage
            - signals
            type: object
          status:
            description: ProbabilisticSamplerStatus defines the observed state of
              ProbabilisticSampler action
            properties:
              conditions:
                description: |-
                  Represents the observations of a ProbabilisticSampler's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_renameattributes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: renameattributes.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: RenameAttribute
    listKind: RenameAttributeList
    plural: renameattributes
    singular: renameattribute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RenameAttribute is the Schema for the RenameAttribute odigos
          action API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RenameAttributeSpec defines the desired state of RenameAttribute
              action
            properties:
              actionName:
                type: string
              disabled:
                type: boolean
              notes:
                type: string
              renames:
                additionalProperties:
                  type: string
                type: object
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - renames
            - signals
            type: object
          status:
            description: RenameAttributeStatus defines the observed state of RenameAttribute
              action
            properties:
              conditions:
                description: |-
                  Represents the observations of a RenameAttribute's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_servicenamesamplers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: servicenamesamplers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: ServiceNameSampler
    listKind: ServiceNameSamplerList
    plural: servicenamesamplers
    shortNames:
    - sns
    singular: servicenamesampler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ServiceNameSampler is the Schema for the servicenamesamplers API.
          It enables trace sampling based on whether specific services appear within a trace.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ServiceNameSamplerSpec defines the desired configuration for a ServiceNameSampler.
              This sampler enables sampling based on the presence of specific service names within a trace.
            properties:
              actionName:
                description: |-
                  ActionName is an optional label to identify this sampling policy.
                  It can be used for display purposes or integration with other tools.
                type: string
              disabled:
                description: |-
                  Disabled indicates whether this sampler should be active.
                  If true, the sampler will not be applied.
                type: boolean
              notes:
                description: Notes allows attaching additional free-form documentation
                  or context to this sampler.
                type: string
              services_name_filters:
                description: |-
                  ServicesNameFilters defines rules for sampling traces based on the presence
                  of specific service names. If a trace contains a span from one of the listed
                  services, the associated sampling ratio is applied.
                items:
                  description: ServiceNameFilter defines a single rule that maps a
                    service name to a sampling decision.
                  properties:
                    fallback_sampling_ratio:
                      default: 100
                      description: |-
                        FallbackSamplingRatio is the percentage (0–100) of traces to sample
                        if the specified service is not present in the trace.
                      maximum: 100
                      minimum: 0
                      type: number
                    sampling_ratio:
                      default: 100
                      description: |-
                        SamplingRatio determines the percentage (0–100) of traces to sample
                        when the specified service is present in the trace.

                        For example, a value of 100 means all such traces will be kept,
                        while a value of 0 means all will be dropped.
                      maximum: 100
                      minimum: 0
                      type: number
                    service_name:
                      description: |-
                        ServiceName specifies the name of the service to look for within a trace.
                        If any span in the trace comes from this service, the rule will apply.
                      type: string
                  required:
                  - fallback_sampling_ratio
                  - sampling_ratio
                  - service_name
                  type: object
                type: array
              signals:
                description: |-
                  Signals specifies which types of telemetry data this sampler applies to.
                  Common values include "traces", "metrics", or "logs".
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - services_name_filters
            - signals
            type: object
          status:
            description: |-
              ServiceNameSamplerStatus represents the runtime status of a ServiceNameSampler,
              including observed conditions such as validation errors or processing state.
            properties:
              conditions:
                description: |-
                  Conditions is a list of status conditions for this sampler,
                  following the standard Kubernetes conventions.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/actions.odigos.io_spanattributesamplers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: spanattributesamplers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: SpanAttributeSampler
    listKind: SpanAttributeSamplerList
    plural: spanattributesamplers
    shortNames:
    - sas
    singular: spanattributesampler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          SpanAttributeSampler is the Schema for the spanattributesamplers API.
          It holds the specification for sampling spans based on attribute conditions,
          as well as the sampler's current status.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SpanAttributeSamplerSpec defines the desired state of SpanAttributeSampler
            properties:
              actionName:
                description: |-
                  ActionName is the name of the sampling action. This may be used to
                  describe the purpose or intent of this sampler, for documentation
                  or reference within other tools or systems.
                type: string
              attribute_filters:
                description: |-
                  AttributeFilters defines a list of criteria to decide how spans should be
                  sampled based on their attributes. At least one filter is required.
                items:
                  description: SpanAttributeFilter allows sampling traces based on
                    specific span attributes and conditions.
                  properties:
                    attribute_key:
                      description: AttributeKey indicates which attribute on the span
                        to evaluate.
                      type: string
                    condition:
                      description: |-
                        Condition is the rule or expression that will be used to evaluate
                        the attribute's value. Exactly one of the condition types must be set:
                          - StringCondition
                          - NumberCondition
                          - BooleanCondition
                          - JsonCondition
                      properties:
                        boolean_condition:
                          description: BooleanCondition applies to boolean attributes.
                          properties:
                            expected_value:
                              description: ExpectedValue is only used if Operation
                                == "equals".
                              type: boolean
                            operation:
                              description: |-
                                Operation can be:
                                  - "exists": Checks that the boolean attribute is present.
                                  - "equals": Checks if the attribute exactly matches ExpectedValue.

                                ExpectedValue is required only for the "equals" operation.
                              enum:
                              - exists
                              - equals
                              type: string
                          required:
                          - operation
                          type: object
                        json_condition:
                          description: JsonCondition applies to attributes that are
                            JSON-encoded strings.
                          properties:
                            expected_value:
                              description: |-
                                ExpectedValue is required for:
                                  - equals
                                  - not_equals
                                  - key_equals
                                  - key_not_equals

                                The value to compare against during evaluation.
                              type: string
                            json_path:
                              description: |-
                                JsonPath is required for:
                                  - jsonpath_exists
                                  - key_equals
                                  - key_not_equals

                                It is a JSONPath expression used to navigate the JSON structure.
                                Example: $.user.role or $.events[0].code
                              type: string
                            operation:
                              description: |-
                                Operation defines the evaluation logic applied to the JSON value.

                                Supported values:
                                  - is_valid_json
                                  - is_invalid_json
                                  - equals
                                  - not_equals
                                  - jsonpath_exists
                                  - key_equals
                                  - key_not_equals
                              enum:
                              - is_valid_json
                              - is_invalid_json
                              - equals
                              - not_equals
                              - jsonpath_exists
                              - key_equals
                              - key_not_equals
                              type: string
                          required:
                          - operation
                          type: object
                        number_condition:
                          description: NumberCondition applies to numeric attributes
                            (int, long, float, double).
                          properties:
                            expected_value:
                              description: ExpectedValue is required for all operations
                                except "exists".
                              type: number
                            operation:
                              description: |-
                                Operation determines the numeric comparison to perform.

                                Valid operations:

                                  - "exists": Checks that the numeric attribute is present (non-null).
                                  - "equals": Checks if the attribute equals ExpectedValue.
                                  - "not_equals": Checks if the attribute does not equal ExpectedValue.
                                  - "greater_than": Checks if attribute > ExpectedValue.
                                  - "less_than": Checks if attribute < ExpectedValue.
                                  - "greater_than_or_equal": Checks if attribute >= ExpectedValue.
                                  - "less_than_or_equal": Checks if attribute <= ExpectedValue.

                                For operations other than "exists", ExpectedValue must be specified.
                              enum:
                              - exists
                              - equals
                              - not_equals
                              - greater_than
                              - less_than
                              - greater_than_or_equal
                              - less_than_or_equal
                              type: string
                          required:
                          - operation
                          type: object
                        string_condition:
                          description: StringCondition applies to string-type attributes.
                          properties:
                            expected_value:
                              description: |-
                                ExpectedValue is required for all operations except "exists". Its usage
                                depends on the chosen Operation, e.g. it may represent an exact string
                                to match, a substring, or a regular expression.
                              type: string
                            operation:
                              description: |-
                                Operation determines what comparison or check should be performed.

                                The valid operations are:

                                  - "exists": Checks that the attribute is present (and not an empty string).
                                  - "equals": String equality comparison with ExpectedValue.
                                  - "not_equals": String inequality comparison with ExpectedValue.
                                  - "contains": Checks if the attribute contains ExpectedValue as a substring.
                                  - "not_contains": Checks if the attribute does not contain ExpectedValue.
                                  - "regex": Interprets ExpectedValue as a regular expression (RE2 syntax)
                                      and checks for a match within the attribute.

                                For operations other than "exists", ExpectedValue must be provided.
                              enum:
                              - exists
                              - equals
                              - not_equals
                              - contains
                              - not_contains
                              - regex
                              type: string
                          required:
                          - operation
                          type: object
                      type: object
                    fallback_sampling_ratio:
                      default: 100
                      description: |-
                        FallbackSamplingRatio is the percentage (0–100) of spans to sample
                        when the condition does not explicitly match. For example, if set to 50,
                        then half of non-matching spans would be sampled.
                      maximum: 100
                      minimum: 0
                      type: number
                    sampling_ratio:
                      default: 100
                      description: |-
                        SamplingRatio determines the percentage (0–100) of traces to sample
                        when the specified attribute satisfies the filter.

                        For example, a value of 100 means all such traces will be kept,
                        while a value of 0 means all will be dropped.
                      maximum: 100
                      minimum: 0
                      type: number
                    service_name:
                      description: |-
                        ServiceName specifies which service this filter applies to. Only spans
                        originating from the given service will be evaluated against this filter.
                      type: string
                  required:
                  - attribute_key
                  - condition
                  - fallback_sampling_ratio
                  - sampling_ratio
                  - service_name
                  type: object
                type: array
              disabled:
                description: |-
                  Disabled, if set to true, indicates that this sampler should not be
                  applied at runtime.
                type: boolean
              notes:
                description: |-
                  Notes provides additional, free-form information about this sampler,
                  such as a reference to a ticket, a link, or usage guidelines.
                type: string
              signals:
                description: |-
                  Signals indicates which ObservabilitySignal types this sampler applies to.
                  For instance, this could include traces, metrics, logs, etc.
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - attribute_filters
            - signals
            type: object
          status:
            description: SpanAttributeSamplerStatus represents the current status
              of a SpanAttributeSampler.
            properties:
              conditions:
                description: Conditions is a list of the latest available observations
                  of this sampler's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_collectorsgroups.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: collectorsgroups.odigos.io
spec:
  group: odigos.io
  names:
    kind: CollectorsGroup
    listKind: CollectorsGroupList
    plural: collectorsgroups
    singular: collectorsgroup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CollectorsGroup is the Schema for the collectors API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CollectorsGroupSpec defines the desired state of Collector
            properties:
              collectorOwnMetricsPort:
                description: |-
                  The port to use for exposing the collector's own metrics as a prometheus endpoint.
                  This can be used to resolve conflicting ports when a collector is using the host network.
                format: int32
                type: integer
              resourcesSettings:
                description: |-
                  Resources [memory/cpu] settings for the collectors group.
                  these settings are used to protect the collectors instances from:
                  - running out of memory and being killed by the k8s OOM killer
                  - consuming all available memory on the node which can lead to node instability
                  - pushing back pressure to the instrumented applications
                properties:
                  cpuLimitMillicores:
                    description: |-
                      CPU resource limit to be used on the pod template.
                      it will be embedded in the as a resource limit of the form `cpu: <value>m`
                    type: integer
                  cpuRequestMillicores:
                    description: |-
                      CPU resource request to be used on the pod template.
                      it will be embedded in the as a resource request of the form `cpu: <value>m`
                    type: integer
                  gomemlimitMiB:
                    description: |-
                      the GOMEMLIMIT environment variable value for the collector pod.
                      this is when go runtime will start garbage collection.
                      it is recommended to be set to 80% of the hard limit of the memory limiter.
                    type: integer
                  maxReplicas:
                    type: integer
                  memoryLimitMiB:
                    description: |-
                      This option sets the limit on the memory usage of the collector.
                      since the memory limiter mechanism is heuristic, and operates on fixed intervals,
                      while it cannot fully prevent OOMs, it can help in reducing the chances of OOMs in edge cases.
                      the settings should prevent the collector from exceeding the memory request,
                      so one can set this to the same value as the memory request or higher to allow for some buffer for bursts.
                    type: integer
                  memoryLimiterLimitMiB:
                    description: |-
                      this parameter sets the "limit_mib" parameter in the memory limiter configuration for the collector.
                      it is the hard limit after which a force garbage collection will be performed.
                      this value will end up comparing against the go runtime reported heap Alloc value.
                      According to the memory limiter docs:
                      > Note that typically the total memory usage of process will be about 50MiB higher than this value
                      a test from nov 2024 showed that fresh odigos collector with no traffic takes 38MiB,
                      thus the 50MiB is a good value to start with.
                    type: integer
                  memoryLimiterSpikeLimitMiB:
                    description: |-
                      this parameter sets the "spike_limit_mib" parameter in the memory limiter configuration for the collector memory limiter.
                      note that this is not the processor soft limit itself, but the diff in Mib between the hard limit and the soft limit.
                      according to the memory limiter docs, it is recommended to set this to 20% of the hard limit.
                      changing this value allows trade-offs between memory usage and resiliency to bursts.
                    type: integer
                  memoryRequestMiB:
                    description: |-
                      MemoryRequestMiB is the memory resource request to be used on the pod template.
                      it will be embedded in the as a resource request of the form `memory: <value>Mi`
                    type: integer
                  minReplicas:
                    description: Minumum + Maximum number of replicas for the collector
                      - these relevant only for gateway.
                    type: integer
                required:
                - cpuLimitMillicores
                - cpuRequestMillicores
                - gomemlimitMiB
                - memoryLimitMiB
                - memoryLimiterLimitMiB
                - memoryLimiterSpikeLimitMiB
                - memoryRequestMiB
                type: object
              role:
                enum:
                - CLUSTER_GATEWAY
                - NODE_COLLECTOR
                type: string
            required:
            - collectorOwnMetricsPort
            - resourcesSettings
            - role
            type: object
          status:
            description: CollectorsGroupStatus defines the observed state of Collector
            properties:
              conditions:
                description: |-
                  Represents the observations of a collectorsroup's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              ready:
                type: boolean
              receiverSignals:
                description: |-
                  Receiver Signals are the signals (trace, metrics, logs) that the collector has setup
                  an otlp receiver for, thus it can accept data from an upstream component.
                  this is used to determine if a workload should export each signal or not.
                  this list is calculated based on the odigos destinations that were configured
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_destinations.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: destinations.odigos.io
spec:
  group: odigos.io
  names:
    kind: Destination
    listKind: DestinationList
    plural: destinations
    singular: destination
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Destination is the Schema for the destinations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DestinationSpec defines the desired state of Destination
            properties:
              data:
                additionalProperties:
                  type: string
                type: object
              destinationName:
                type: string
              secretRef:
                description: |-
                  LocalObjectReference contains enough information to let you locate the
                  referenced object inside the same namespace.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
              sourceSelector:
                description: |-
                  SourceSelector defines which sources can send data to this destination.
                  If not specified, defaults to "all".
                properties:
                  groups:
                    description: |-
                      Workloads (sources) are assigned to groups via labels (odigos.io/group-backend: true), allowing a more flexible selection mechanism.
                      Example:
                      groups: ["backend", "monitoring"]
                      This means the destination will receive data only from sources labeled with "backend" or "monitoring".
                    items:
                      type: string
                    type: array
                  namespaces:
                    description: |-
                      If a namespace is specified, all workloads (sources) within that namespace are allowed to send data.
                      Example:
                      namespaces: ["default", "production"]
                      This means the destination will receive data from all sources in "default" and "production" namespaces.
                    items:
                      type: string
                    type: array
                type: object
              type:
                type: string
            required:
            - data
            - destinationName
            - signals
            - type
            type: object
          status:
            description: DestinationStatus defines the observed state of Destination
            properties:
              conditions:
                description: Represents the observations of a destination's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_instrumentationconfigs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: instrumentationconfigs.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentationConfig
    listKind: InstrumentationConfigList
    plural: instrumentationconfigs
    singular: instrumentationconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstrumentationConfig is the Schema for the instrumentationconfig
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Config for the OpenTelemeetry SDKs that should be applied to a workload.
              The workload is identified by the owner reference
            properties:
              agentInjectionEnabled:
                description: determines if odigos should inject agents to pods of
                  this workload.
                type: boolean
              agentsMetaHash:
                description: |-
                  this hash is used to determine the deployment of the agents.
                  e.g. when the distro for container changes, or it's compatibility version,
                  or something else that requires rollout, the hash change will indicate that.
                  if the hash is empty, it means that no agent should be enabled in any pod container.
                type: string
              containers:
                description: configuration for each instrumented container in the
                  workload
                items:
                  description: ContainerAgentConfig is a configuration for a specific
                    container in a workload.
                  properties:
                    agentEnabled:
                      description: boolean flag to indicate if the agent should be
                        enabled for this container.
                      type: boolean
                    agentEnabledMessage:
                      description: |-
                        free text message to provide more information about the instrumentation decision.
                        can be left empty if reason is self-explanatory.
                      type: string
                    agentEnabledReason:
                      description: An enum reason for the agent injection decision.
                      enum:
                      - EnabledSuccessfully
                      - WaitingForRuntimeInspection
                      - WaitingForNodeCollector
                      - UnsupportedProgrammingLanguage
                      - IgnoredContainer
                      - NoAvailableAgent
                      - UnsupportedRuntimeVersion
                      - MissingDistroParameter
                      - OtherAgentDetected
                      type: string
                    containerName:
                      description: The name of the container to which this configuration
                        applies.
                      type: string
                    distroParams:
                      additionalProperties:
                        type: string
                      description: |-
                        Additional parameters to the distro that controls how it's being applied.
                        Keys are parameter names (like "libc") and values are the value to use for that parameter (glibc / musl)
                      type: object
                    otelDistroName:
                      description: |-
                        The name of the otel distribution to use for this container.
                        if the name is empty, this container should not be instrumented.
                      type: string
                  required:
                  - agentEnabled
                  - containerName
                  type: object
                type: array
              sdkConfigs:
                description: |-
                  Configuration for the OpenTelemetry SDKs that this workload should use.
                  The SDKs are identified by the programming language they are written in.
                items:
                  properties:
                    codeAttributes:
                      description: default configuration for collecting code attributes,
                        in case the instrumentation library does not provide a configuration.
                      properties:
                        column:
                          description: |-
                            Should record the `code.column` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        filePath:
                          description: |-
                            Should record the `code.filepath` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        function:
                          description: |-
                            Should record the `code.function` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        lineNumber:
                          description: |-
                            Should record the `code.lineno` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        namespace:
                          description: |-
                            Should record the `code.namespace` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                        stackTrace:
                          description: |-
                            Should record the `code.stacktrace` attribute.
                            if unset, the value will resolve from other relevant rules, or fallback to false
                          type: boolean
                      type: object
                    headSamplerConfig:
                      description: |-
                        HeadSamplingConfig is a set sampling rules.
                        This config currently only applies to root spans.
                        In the Future we might add another level of configuration base on the parent span (ParentBased Sampling)
                      properties:
                        attributesAndSamplerRules:
                          items:
                            description: |-
                              AttributesAndSamplerRule is a set of AttributeCondition that are ANDed together.
                              If all attribute conditions evaluate to true, the AND sampler evaluates to true,
                              and the fraction is used to determine the sampling decision.
                              If any of the attribute compare samplers evaluate to false,
                              the fraction is not used and the rule is skipped.
                              An "empty" AttributesAndSamplerRule with no attribute conditions is considered to always evaluate to true.
                              and the fraction is used to determine the sampling decision.
                              This entity is refered to a rule in Odigos terminology for head-sampling.
                            properties:
                              attributeConditions:
                                items:
                                  description: '''Operand'' represents the attributes
                                    and values that an operator acts upon in an expression'
                                  properties:
                                    key:
                                      description: attribute key (e.g. "url.path")
                                      type: string
                                    operator:
                                      description: The operator to use to compare
                                        the attribute value.
                                      enum:
                                      - equals
                                      - notEquals
                                      - endWith
                                      - startWith
                                      type: string
                                    val:
                                      description: currently only string values are
                                        supported.
                                      type: string
                                  required:
                                  - key
                                  - val
                                  type: object
                                type: array
                              fraction:
                                default: 1
                                description: |-
                                  The fraction of spans to sample, in the range [0, 1].
                                  If the fraction is 0, no spans are sampled.
                                  If the fraction is 1, all spans are sampled.
                                type: number
                            required:
                            - attributeConditions
                            - fraction
                            type: object
                          type: array
                        fallbackFraction:
                          default: 1
                          description: |-
                            Used as a fallback if all rules evaluate to false,
                            it may be empty - in this case the default value will be 1 - all spans are sampled.
                            it should be a float value in the range [0, 1] - the fraction of spans to sample.
                            a value of 0 means no spans are sampled if none of the rules evaluate to true.
                          type: number
                      required:
                      - attributesAndSamplerRules
                      - fallbackFraction
                      type: object
                    instrumentationLibraryConfigs:
                      description: configurations for the instrumentation libraries
                        the the SDK should use
                      items:
                        properties:
                          codeAttributes:
                            description: |-
                              code attributes configuration for a specific library.
                              if not set, the default code attributes configuration for the workload will be used.
                              if set, but internal fields are empty, those fields will be used from the default configuration.
                            properties:
                              column:
                                description: |-
                                  Should record the `code.column` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              filePath:
                                description: |-
                                  Should record the `code.filepath` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              function:
                                description: |-
                                  Should record the `code.function` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              lineNumber:
                                description: |-
                                  Should record the `code.lineno` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              namespace:
                                description: |-
                                  Should record the `code.namespace` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                              stackTrace:
                                description: |-
                                  Should record the `code.stacktrace` attribute.
                                  if unset, the value will resolve from other relevant rules, or fallback to false
                                type: boolean
                            type: object
                          libraryId:
                            properties:
                              libraryName:
                                description: |-
                                  The name of the instrumentation library
                                  - Node.js: The name of the npm package: `@opentelemetry/instrumentation-<name>`
                                type: string
                              spanKind:
                                description: |-
                                  SpanKind is only supported by Golang and will be ignored for any other SDK language.
                                  In Go, SpanKind is used because the same instrumentation library can be utilized for different span kinds (e.g., client/server).
                                enum:
                                - client
                                - server
                                - producer
                                - consumer
                                - internal
                                type: string
                            required:
                            - libraryName
                            type: object
                          payloadCollection:
                            properties:
                              dbQuery:
                                description: rule for collecting db payloads for the
                                  mentioned workload and instrumentation libraries
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                type: object
                              httpRequest:
                                description: |-
                                  Collect HTTP request payload data when available.
                                  Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                  mimeTypes:
                                    description: |-
                                      Limit payload collection to specific mime types based on the content type header.
                                      When not specified, all mime types payloads will be collected.
                                      Empty array will make the rule ineffective.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpResponse:
                                description: |-
                                  rule for collecting the response part of an http payload.
                                  Can be a client response or a server response, depending on the instrumentation library
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                  mimeTypes:
                                    description: |-
                                      Limit payload collection to specific mime types based on the content type header.
                                      When not specified, all mime types payloads will be collected.
                                      Empty array will make the rule ineffective.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              messaging:
                                description: rule for collecting messaging payloads
                                  for the mentioned workload and instrumentation libraries
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                type: object
                            type: object
                          traceConfig:
                            properties:
                              enabled:
                                description: |-
                                  Whether the instrumentation library is enabled to record traces.
                                  When false, it is expected that the instrumentation library does not produce any spans regardless of any other configuration.
                                  When true, the instrumentation library should produce spans according to the other configuration options.
                                  If not specified, the default value for this signal should be used (whether to enable libraries by default or not).
                                type: boolean
                            type: object
                        required:
                        - libraryId
                        type: object
                      type: array
                    language:
                      description: The language of the SDK being configured
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - php
                      - mysql
                      - nginx
                      - unknown
                      - ignored
                      type: string
                    payloadCollection:
                      properties:
                        dbQuery:
                          description: rule for collecting db payloads for the mentioned
                            workload and instrumentation libraries
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                          type: object
                        httpRequest:
                          description: |-
                            Collect HTTP request payload data when available.
                            Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                            mimeTypes:
                              description: |-
                                Limit payload collection to specific mime types based on the content type header.
                                When not specified, all mime types payloads will be collected.
                                Empty array will make the rule ineffective.
                              items:
                                type: string
                              type: array
                          type: object
                        httpResponse:
                          description: |-
                            rule for collecting the response part of an http payload.
                            Can be a client response or a server response, depending on the instrumentation library
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                            mimeTypes:
                              description: |-
                                Limit payload collection to specific mime types based on the content type header.
                                When not specified, all mime types payloads will be collected.
                                Empty array will make the rule ineffective.
                              items:
                                type: string
                              type: array
                          type: object
                        messaging:
                          description: rule for collecting messaging payloads for
                            the mentioned workload and instrumentation libraries
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                          type: object
                      type: object
                  required:
                  - language
                  type: object
                type: array
              serviceName:
                description: the service.name property is used to populate the `service.name`
                  resource attribute in the telemetry generated by this workload
                type: string
            required:
            - agentInjectionEnabled
            type: object
          status:
            properties:
              conditions:
                description: Represents the observations of a InstrumentationConfig's
                  current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              runtimeDetailsByContainer:
                description: Capture Runtime Details for the workloads that this CR
                  applies to.
                items:
                  properties:
                    containerName:
                      type: string
                    criErrorMessage:
                      description: Stores the error message from the CRI runtime if
                        returned to prevent instrumenting the container if an error
                        exists.
                      type: string
                    envFromContainerRuntime:
                      description: Holds the environment variables retrieved from
                        the container runtime.
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    envVars:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    language:
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - php
                      - mysql
                      - nginx
                      - unknown
                      - ignored
                      type: string
                    libCType:
                      enum:
                      - glibc
                      - musl
                      type: string
                    otherAgent:
                      properties:
                        name:
                          type: string
                      type: object
                    runtimeUpdateState:
                      description: A temporary variable used during migration to track
                        whether the new runtime detection process has been executed.
                        If empty, it indicates the process has not yet been run. This
                        field may be removed later.
                      type: string
                    runtimeVersion:
                      type: string
                  required:
                  - containerName
                  - language
                  type: object
                type: array
              workloadRolloutHash:
                description: |-
                  This hash is recorded only after the rollout took place.
                  it allows us to determine if the workload needs to be rollout based on previous rollout and the current config.
                  if this field is different than the spec.AgentsDeploymentHash it means rollout is needed or not yet updated.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_instrumentationinstances.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: instrumentationinstances.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentationInstance
    listKind: InstrumentationInstanceList
    plural: instrumentationinstances
    singular: instrumentationinstance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstrumentationInstance is the Schema for the InstrumentationInstances
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              containerName:
                description: |-
                  stores the name of the container in the pod where the SDK is running.
                  The pod details can be found as the owner reference on the CR.
                type: string
            required:
            - containerName
            type: object
          status:
            description: |-
              InstrumentationInstanceStatus defines the observed state of InstrumentationInstance
              If the instrumentation is not active, this CR should be deleted
            properties:
              components:
                items:
                  description: |-
                    InstrumentationLibraryStatus defines the observed state of an InstrumentationLibrary.
                    if a library is not active/disable, it should not be included in the status
                  properties:
                    healthy:
                      type: boolean
                    identifyingAttributes:
                      description: |-
                        Attributes that identify the component.
                        The combination of (Name, Type, IdentifyingAttributes) must be unique.
                      items:
                        description: Attribute is a key-value pair that describes
                          a component or instrumentation
                        properties:
                          key:
                            minLength: 1
                            type: string
                          value:
                            type: string
                        required:
                        - key
                        - value
                        type: object
                      type: array
                    lastStatusTime:
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the component health.
                        can be omitted if healthy is true
                      maxLength: 32768
                      type: string
                    name:
                      description: for example ("net/http", "@opentelemetry/instrumentation-redis")
                      minLength: 1
                      type: string
                    nonIdentifyingAttributes:
                      description: |-
                        Attributes that do not necessarily identify the component but help describe
                        its characteristics.
                      items:
                        description: Attribute is a key-value pair that describes
                          a component or instrumentation
                        properties:
                          key:
                            minLength: 1
                            type: string
                          value:
                            type: string
                        required:
                        - key
                        - value
                        type: object
                      type: array
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the SDK status.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                      type: string
                    type:
                      enum:
                      - instrumentation
                      - sampler
                      - exporter
                      type: string
                  required:
                  - lastStatusTime
                  - name
                  - type
                  type: object
                type: array
              healthy:
                description: |-
                  Healthy true means that the odigos agent has started the SDK, and there are no errors. User can expect telemetry to be generated.
                  Healthy false means that the agent has stopped and telemetry data is not expected to be generated.
                  Healthy nil means that the agent did not report any health status yet (prefer to always report health status).
                type: boolean
              identifyingAttributes:
                description: |-
                  Attributes that identify the SDK and are reported as resource attributes in the generated telemetry.
                  One can identify if an arbitrary telemetry is generated by this SDK by checking those resource attributes.
                items:
                  description: Attribute is a key-value pair that describes a component
                    or instrumentation
                  properties:
                    key:
                      minLength: 1
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              lastStatusTime:
                format: date-time
                type: string
              message:
                description: |-
                  message is a human readable message indicating details about the SDK general health.
                  can be omitted if healthy is true
                maxLength: 32768
                type: string
              nonIdentifyingAttributes:
                description: Attributes that are not reported as resource attributes
                  but useful to describe characteristics of the SDK.
                items:
                  description: Attribute is a key-value pair that describes a component
                    or instrumentation
                  properties:
                    key:
                      minLength: 1
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              reason:
                description: |-
                  reason contains a programmatic identifier indicating the reason for the component status.
                  Producers of specific condition types may define expected values and meanings for this field,
                  and whether the values are considered a guaranteed API.
                type: string
            required:
            - lastStatusTime
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_instrumentationrules.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: instrumentationrules.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentationRule
    listKind: InstrumentationRuleList
    plural: instrumentationrules
    singular: instrumentationrule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              codeAttributes:
                description: Configure which code attributes should be recorded as
                  span attributes.
                properties:
                  column:
                    description: |-
                      Should record the `code.column` attribute.
                      if unset, the value will resolve from other relevant rules, or fallback to false
                    type: boolean
                  filePath:
                    description: |-
                      Should record the `code.filepath` attribute.
                      if unset, the value will resolve from other relevant rules, or fallback to false
                    type: boolean
                  function:
                    description: |-
                      Should record the `code.function` attribute.
                      if unset, the value will resolve from other relevant rules, or fallback to false
                    type: boolean
                  lineNumber:
                    description: |-
                      Should record the `code.lineno` attribute.
                      if unset, the value will resolve from other relevant rules, or fallback to false
                    type: boolean
                  namespace:
                    description: |-
                      Should record the `code.namespace` attribute.
                      if unset, the value will resolve from other relevant rules, or fallback to false
                    type: boolean
                  stackTrace:
                    description: |-
                      Should record the `code.stacktrace` attribute.
                      if unset, the value will resolve from other relevant rules, or fallback to false
                    type: boolean
                type: object
              disabled:
                description: A boolean field allowing to temporarily disable the rule,
                  but keep it around for future use
                type: boolean
              instrumentationLibraries:
                description: |-
                  For fine grained control, the user can specify the instrumentation library to use.
                  One can specify same rule for multiple languages and libraries at the same time.
                  If nil, all instrumentation libraries will be used.
                  If empty, no instrumentation libraries will be used.
                items:
                  description: |-
                    Includes the instrumentation library name, span kind (for golang) and language
                    which identifies a specific library globally.
                  properties:
                    language:
                      description: The language in which this library will collect
                        data
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - php
                      - mysql
                      - nginx
                      - unknown
                      - ignored
                      type: string
                    name:
                      description: The name of the instrumentation library
                      type: string
                    spanKind:
                      description: |-
                        SpanKind is only supported by Golang and will be ignored for any other SDK language.
                        In Go, SpanKind is used because the same instrumentation library can be utilized for different span kinds (e.g., client/server).
                      enum:
                      - client
                      - server
                      - producer
                      - consumer
                      - internal
                      type: string
                  required:
                  - language
                  - name
                  type: object
                type: array
              notes:
                description: 'A free-form text field that allows you to attach notes
                  regarding the rule for convenience. For example: why it was added.
                  Odigos does not use or assume any meaning from this field.'
                type: string
              otelDistros:
                description: Set the otel distros to use instead of the defaults.
                properties:
                  otelDistroNames:
                    description: |-
                      Set a list of distribution names that take priority over the default distributions.
                      if a language is not in this list, the default distribution will be used.
                      if multiple distributions are specified for the same language, in one or many rules, the behavior is undefined.
                    items:
                      type: string
                    type: array
                required:
                - otelDistroNames
                type: object
              otelSdks:
                description: 'Deprecated: use OtelDistros instead.'
                properties:
                  otelSdkByLanguage:
                    additionalProperties:
                      properties:
                        sdkTier:
                          type: string
                        sdkType:
                          description: 'Odigos supports two types of OpenTelemetry
                            SDKs: native and ebpf.'
                          type: string
                      required:
                      - sdkTier
                      - sdkType
                      type: object
                    type: object
                required:
                - otelSdkByLanguage
                type: object
              payloadCollection:
                description: Allows to configure payload collection aspects for different
                  types of payloads.
                properties:
                  dbQuery:
                    description: rule for collecting db payloads for the mentioned
                      workload and instrumentation libraries
                    properties:
                      dropPartialPayloads:
                        description: |-
                          If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                          This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                        type: boolean
                      maxPayloadLength:
                        description: |-
                          Maximum length of the payload to collect.
                          If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                        format: int64
                        type: integer
                    type: object
                  httpRequest:
                    description: |-
                      Collect HTTP request payload data when available.
                      Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                    properties:
                      dropPartialPayloads:
                        description: |-
                          If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                          This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                        type: boolean
                      maxPayloadLength:
                        description: |-
                          Maximum length of the payload to collect.
                          If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                        format: int64
                        type: integer
                      mimeTypes:
                        description: |-
                          Limit payload collection to specific mime types based on the content type header.
                          When not specified, all mime types payloads will be collected.
                          Empty array will make the rule ineffective.
                        items:
                          type: string
                        type: array
                    type: object
                  httpResponse:
                    description: |-
                      rule for collecting the response part of an http payload.
                      Can be a client response or a server response, depending on the instrumentation library
                    properties:
                      dropPartialPayloads:
                        description: |-
                          If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                          This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                        type: boolean
                      maxPayloadLength:
                        description: |-
                          Maximum length of the payload to collect.
                          If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                        format: int64
                        type: integer
                      mimeTypes:
                        description: |-
                          Limit payload collection to specific mime types based on the content type header.
                          When not specified, all mime types payloads will be collected.
                          Empty array will make the rule ineffective.
                        items:
                          type: string
                        type: array
                    type: object
                  messaging:
                    description: rule for collecting messaging payloads for the mentioned
                      workload and instrumentation libraries
                    properties:
                      dropPartialPayloads:
                        description: |-
                          If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                          This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                        type: boolean
                      maxPayloadLength:
                        description: |-
                          Maximum length of the payload to collect.
                          If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                        format: int64
                        type: integer
                    type: object
                type: object
              ruleName:
                description: Allows you to attach a meaningful name to the rule for
                  convenience. Odigos does not use or assume any meaning from this
                  field.
                type: string
              workloads:
                description: An array of workload objects (name, namespace, kind)
                  to which the rule should be applied. If not specified, the rule
                  will be applied to all workloads. empty array will render the rule
                  inactive.
                items:
                  description: |-
                    PodWorkload represents the higher-level controller managing a specific Pod within a Kubernetes cluster.
                    It contains essential details about the controller such as its Name, Namespace, and Kind.
                    'Kind' refers to the type of controller, which can be a Deployment, StatefulSet, or DaemonSet.
                    This struct is useful for identifying and interacting with the overarching entity
                    that governs the lifecycle and behavior of a Pod, especially in contexts where
                    understanding the relationship between a Pod and its controlling workload is crucial.
                  properties:
                    kind:
                      description: |-
                        1. the pascal case representation of the workload kind
                        it is used in k8s api objects as the `Kind` field.
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: |-
                  Represents the observations of a instrumentationrule's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_instrumentedapplications.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: instrumentedapplications.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentedApplication
    listKind: InstrumentedApplicationList
    plural: instrumentedapplications
    singular: instrumentedapplication
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          InstrumentedApplication is the Schema for the instrumentedapplications API

          Deprecated: in favour of InstrumentationConfig
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              InstrumentedApplicationSpec defines the desired state of InstrumentedApplication

              Deprecated: in favour of InstrumentationConfig
            properties:
              options:
                items:
                  description: 'Deprecated: configuration is done via InstrumentationConfig'
                  properties:
                    containerName:
                      type: string
                    instrumentationsLibraries:
                      items:
                        description: 'Deprecated: configuration is done via InstrumentationConfig'
                        properties:
                          libraryName:
                            type: string
                          options:
                            items:
                              description: 'Deprecated: configuration is done via
                                InstrumentationConfig'
                              properties:
                                optionKey:
                                  type: string
                                spanKind:
                                  description: |-
                                    SpanKind is already defined in opentelemetry-go as int.
                                    this value can go into the CRD in which case it will be string for user convenience.
                                  enum:
                                  - client
                                  - server
                                  - producer
                                  - consumer
                                  - internal
                                  type: string
                              required:
                              - optionKey
                              - spanKind
                              type: object
                            type: array
                        required:
                        - libraryName
                        - options
                        type: object
                      type: array
                  required:
                  - containerName
                  - instrumentationsLibraries
                  type: object
                type: array
              runtimeDetails:
                items:
                  properties:
                    containerName:
                      type: string
                    criErrorMessage:
                      description: Stores the error message from the CRI runtime if
                        returned to prevent instrumenting the container if an error
                        exists.
                      type: string
                    envFromContainerRuntime:
                      description: Holds the environment variables retrieved from
                        the container runtime.
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    envVars:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    language:
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - php
                      - mysql
                      - nginx
                      - unknown
                      - ignored
                      type: string
                    libCType:
                      enum:
                      - glibc
                      - musl
                      type: string
                    otherAgent:
                      properties:
                        name:
                          type: string
                      type: object
                    runtimeUpdateState:
                      description: A temporary variable used during migration to track
                        whether the new runtime detection process has been executed.
                        If empty, it indicates the process has not yet been run. This
                        field may be removed later.
                      type: string
                    runtimeVersion:
                      type: string
                  required:
                  - containerName
                  - language
                  type: object
                type: array
            type: object
          status:
            description: |-
              InstrumentedApplicationStatus defines the observed state of InstrumentedApplication

              Deprecated: in favour of InstrumentationConfig
            properties:
              conditions:
                description: Represents the observations of a nstrumentedApplication's
                  current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_processors.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: processors.odigos.io
spec:
  group: odigos.io
  names:
    kind: Processor
    listKind: ProcessorList
    plural: processors
    singular: processor
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Processor is the Schema for an Opentelemetry Collector Processor
          that is added to Odigos pipeline
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProcessorSpec defines the an OpenTelemetry Collector processor
              in odigos telemetry pipeline
            properties:
              collectorRoles:
                description: control which collector roles in odigos pipeline this
                  processor is attached to.
                items:
                  enum:
                  - CLUSTER_GATEWAY
                  - NODE_COLLECTOR
                  type: string
                type: array
              disabled:
                description: |-
                  disable is a flag to enable or disable the processor.
                  if the processor is disabled, it will not be included in the collector configuration yaml.
                  this allows the user to keep the processor configuration in the CR, but disable it temporarily.
                type: boolean
              notes:
                description: user can attach notes to the processor, to document its
                  purpose, usage, etc.
                type: string
              orderHint:
                description: |-
                  control the order of processors.
                  a processor with lower order hint value will be placed before other processors with higher value.
                  if 2 processors have the same value, the order is arbitrary.
                  if the value is missing (or 0) the processor can be placed anywhere in the pipeline
                type: integer
              processorConfig:
                description: this it the configuration of the opentelemetry collector
                  processor component with the type specified in 'type'.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              processorName:
                description: |-
                  this name is solely for the user convenience, to attach a meaningful name to the processor.
                  odigos must not assume any semantics from this name.
                  odigos cannot assume this name is unique, not empty, exclude spaces or dots, limited in length, etc.
                type: string
              signals:
                description: signals can be used to control which observability signals
                  are processed by the processor.
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
              type:
                description: |-
                  type of the processor (batch, attributes, etc).
                  this field is only the type, not it's instance name in the collector configuration yaml
                type: string
            required:
            - collectorRoles
            - processorConfig
            - signals
            - type
            type: object
          status:
            description: ProcessorStatus defines the observed state of the processor
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/odigos.io_sources.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/system-object: "true"
  name: sources.odigos.io
spec:
  group: odigos.io
  names:
    kind: Source
    listKind: SourceList
    plural: sources
    singular: source
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.workload.name
      name: Workload
      type: string
    - jsonPath: .spec.workload.kind
      name: Kind
      type: string
    - jsonPath: .spec.workload.namespace
      name: Namespace
      type: string
    - jsonPath: .spec.disableInstrumentation
      name: Disabled
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Source configures an application for auto-instrumentation.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              disableInstrumentation:
                description: DisableInstrumentation excludes this workload from auto-instrumentation.
                type: boolean
              otelServiceName:
                description: |-
                  OtelServiceName determines the "service.name" resource attribute which will be reported by the instrumentations of this source.
                  If not set, the workload name will be used.
                  It is not valid for namespace sources.
                type: string
              workload:
                description: |-
                  Workload represents the workload or namespace to be instrumented.
                  This field is required upon creation and cannot be modified.
                properties:
                  kind:
                    description: |-
                      1. the pascal case representation of the workload kind
                      it is used in k8s api objects as the `Kind` field.
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - kind
                - name
                - namespace
                type: object
            required:
            - workload
            type: object
          status:
            properties:
              conditions:
                description: |-
                  Represents the observations of a source's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/autoscaler/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-autoscaler
rules:
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - sources
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/cleanup/cleanup-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cleanup-clusterrole
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "services", "secrets", "nodes"]
  verbs: ["get", "list", "patch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "patch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["list", "get", "patch", "delete"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "list", "delete"]
---
# Source: odigos/templates/datacollection/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-data-collection
rules:
  - apiGroups:
      - ''
    resources:
      - nodes/stats
      - nodes/proxy
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/instrumentor/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-instrumentor
rules:
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - operator.odigos.io
    resources:
      - odigos/finalizers
    verbs:
      - update
  - apiGroups:
      - odigos.io
    resources:
      - instrumentedapplications
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - sources
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - sources/finalizers
    verbs:
      - update
---
# Source: odigos/templates/odiglet/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odiglet
rules:
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods/status
    verbs:
      - get
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationinstances
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationinstances/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs/status
    verbs:
      - get
      - patch
      - update
---
# Source: odigos/templates/scheduler/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-scheduler
rules:
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/ui/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-ui
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - get
      - list
      - patch
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
      - daemonsets
    verbs:
      - get
      - list
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationconfigs
      - instrumentationinstances
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - sources
    verbs:
      - get
      - list
      - patch
      - create
      - delete
---
# Source: odigos/templates/autoscaler/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-autoscaler
subjects:
- kind: ServiceAccount
  name: odigos-autoscaler
  namespace: default
---
# Source: odigos/templates/cleanup/cleanup-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cleanup-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: cleanup-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: cleanup-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: odigos/templates/datacollection/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-data-collection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-data-collection
subjects:
- kind: ServiceAccount
  name: odigos-data-collection
  namespace: default
---
# Source: odigos/templates/instrumentor/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-instrumentor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-instrumentor
subjects:
  - kind: ServiceAccount
    name: odigos-instrumentor
    namespace: default
---
# Source: odigos/templates/odiglet/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odiglet
subjects:
  - kind: ServiceAccount
    name: odiglet
    namespace: default
roleRef:
  kind: ClusterRole
  name: odiglet
  apiGroup: rbac.authorization.k8s.io
---
# Source: odigos/templates/scheduler/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-scheduler
subjects:
  - kind: ServiceAccount
    name: odigos-scheduler
    namespace: default
---
# Source: odigos/templates/ui/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-ui
subjects:
  - kind: ServiceAccount
    name: odigos-ui
    namespace: default
---
# Source: odigos/templates/autoscaler/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-autoscaler
  namespace: 'default'
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - apps
    resources:
      - daemonsets/status
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments/status
    verbs:
      - get
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - destinations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - destinations/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - odigos.io
    resources:
      - processors
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - actions.odigos.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - actions.odigos.io
    resources:
      - '*/status'
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/status
    verbs:
      - get
      - patch
      - update
---
# Source: odigos/templates/cleanup/cleanup-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cleanup-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["namespaces", "configmaps"]
  verbs: ["get", "list", "patch", "delete"]
---
# Source: odigos/templates/instrumentor/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-instrumentor
  namespace: 'default'
rules:
  - apiGroups:
      - ''
    resourceNames:
      - effective-config
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - destinations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationrules
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: odigos/templates/odiglet/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odiglet
  namespace: 'default'
rules:
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
      - collectorsgroups/status
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/scheduler/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-scheduler
  namespace: 'default'
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - configmaps
    resourceNames:
      - effective-config
      - odigos-deployment
    verbs:
      - patch
      - create
      - update
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
    verbs:
      - get
      - list
      - create
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/status
    verbs:
      - get
  - apiGroups:
      - odigos.io
    resources:
      - destinations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationrules
      - processors
    verbs:
      - get
      - list
      - watch
      - patch
      - delete
      - create
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/ui/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-ui
  namespace: 'default'
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - odigos.io
    resources:
      - instrumentationrules
      - destinations
    verbs:
      - get
      - list
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - odigos.io
    resources:
      - destinations
    verbs:
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
    verbs:
      - get
      - list
  - apiGroups:
      - actions.odigos.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - create
      - patch
      - update
      - delete
---
# Source: odigos/templates/autoscaler/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-autoscaler-leader-election
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-leader-election-role
subjects:
- kind: ServiceAccount
  name: odigos-autoscaler
---
# Source: odigos/templates/autoscaler/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-autoscaler
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-autoscaler
subjects:
- kind: ServiceAccount
  name: odigos-autoscaler
---
# Source: odigos/templates/cleanup/cleanup-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cleanup-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: cleanup-sa
  namespace: default
roleRef:
  kind: Role
  name: cleanup-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: odigos/templates/instrumentor/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-instrumentor-leader-election
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-leader-election-role
subjects:
- kind: ServiceAccount
  name: odigos-instrumentor
---
# Source: odigos/templates/instrumentor/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-instrumentor
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-instrumentor
subjects:
- kind: ServiceAccount
  name: odigos-instrumentor
---
# Source: odigos/templates/odiglet/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odiglet
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odiglet
subjects:
  - kind: ServiceAccount
    name: odiglet
    namespace: default
---
# Source: odigos/templates/scheduler/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-scheduler-leader-election
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-leader-election-role
subjects:
- kind: ServiceAccount
  name: odigos-scheduler
---
# Source: odigos/templates/scheduler/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-scheduler
subjects:
  - kind: ServiceAccount
    name: odigos-scheduler
---
# Source: odigos/templates/ui/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-ui
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-ui
subjects:
- kind: ServiceAccount
  name: odigos-ui
  namespace: default
---
# Source: odigos/templates/instrumentor/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: odigos-instrumentor
  namespace: default
spec:
  ports:
    - name: webhook-server
      port: 9443
      targetPort: 9443
  selector:
    app.kubernetes.io/name: odigos-instrumentor
---
# Source: odigos/templates/ui/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ui
  namespace: 'default'
  labels:
    app.kubernetes.io/name: odigos-ui
spec:
  ports:
    - name: ui
      port: 3000
    - name: otlp
      port: 4317
  selector:
    app: odigos-ui
---
# Source: odigos/templates/odiglet/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: odiglet
  name: odiglet
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: odiglet
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: odiglet
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      initContainers:
        - name: init
          
          image: registry.odigos.io/odigos-odiglet:v0.0.0
          imagePullPolicy: IfNotPresent
          command:
            - /root/odiglet
          args:
            - init
          volumeMounts:
            - name: odigos
              mountPath: /var/odigos
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: ODIGOS_TIER
              valueFrom:
                configMapKeyRef:
                  key: ODIGOS_TIER
                  name: odigos-deployment
      containers:
        - name: odiglet
          
          image: registry.odigos.io/odigos-odiglet:v0.0.0
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName                  
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CURRENT_NS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OTEL_LOG_LEVEL
              value: info
          envFrom:
            - configMapRef:
                name: odigos-own-telemetry-otel-config
                optional: true
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
          volumeMounts:
            - name: run-dir
              mountPath: /run
            - name: device-plugins-dir
              mountPath: /var/lib/kubelet/device-plugins
            - name: odigos
              mountPath: /var/odigos
              readOnly: true
            - name: kernel-debug
              mountPath: /sys/kernel/debug
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-node-critical
      serviceAccountName: odiglet
      volumes:
        - name: run-dir
          hostPath:
            path: /run
        - name: device-plugins-dir
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: odigos
          hostPath:
            path: /var/odigos
        - name: kernel-debug
          hostPath:
            path: /sys/kernel/debug
      nodeSelector: 
        kubernetes.io/os: linux
      tolerations: 
        - operator: Exists
---
# Source: odigos/templates/autoscaler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-autoscaler
  name: odigos-autoscaler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: odigos-autoscaler
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: odigos-autoscaler
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
        command:
          - /app
        image: registry.odigos.io/odigos-autoscaler:v0.0.0
        env:
          - name: OTEL_SERVICE_NAME
            value: auto-scaler
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ODIGOS_VERSION
            valueFrom:
              configMapKeyRef:
                key: ODIGOS_VERSION
                name: odigos-deployment   
          - name: ODIGOS_COLLECTOR_IMAGE
            value: 'registry.odigos.io/odigos-collector:v0.0.0'
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-autoscaler
      terminationGracePeriodSeconds: 10
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/instrumentor/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-instrumentor
  name: odigos-instrumentor
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: odigos-instrumentor
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: odigos-instrumentor
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: odigos-instrumentor
                topologyKey: "kubernetes.io/hostname"
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
        command:
          - /app
        
        image: registry.odigos.io/odigos-instrumentor:v0.0.0
        ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
        env:
          - name: OTEL_SERVICE_NAME
            value: instrumentor
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ODIGOS_TIER
            valueFrom:
              configMapKeyRef:
                key: ODIGOS_TIER
                name: odigos-deployment
        volumeMounts:
          - name: webhook-cert
            mountPath: /tmp/k8s-webhook-server/serving-certs
            readOnly: true
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          periodSeconds: 10
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-instrumentor
      volumes:
        - name: webhook-cert
          secret:
            secretName: webhook-cert
            defaultMode: 420
      terminationGracePeriodSeconds: 10
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/scheduler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-scheduler
  name: odigos-scheduler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: odigos-scheduler
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: odigos-scheduler
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
        command:
          - /app
        
        image: registry.odigos.io/odigos-scheduler:v0.0.0
        env:
          - name: OTEL_SERVICE_NAME
            value: scheduler
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ODIGOS_TIER
            valueFrom:
              configMapKeyRef:
                key: ODIGOS_TIER
                name: odigos-deployment
          - name: ODIGOS_VERSION
            valueFrom:
              configMapKeyRef:
                key: ODIGOS_VERSION
                name: odigos-deployment
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-scheduler
      terminationGracePeriodSeconds: 10
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/ui/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-ui
  name: odigos-ui
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odigos-ui
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: ui
      labels:
        app: odigos-ui
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - name: ui
        
        image: registry.odigos.io/odigos-ui:v0.0.0
        args:
          - --namespace=$(CURRENT_NS)
          - --address=0.0.0.0
        env:
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
          - containerPort: 3000
            name: ui
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: ui-db-storage
            mountPath: /data          
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-ui
      terminationGracePeriodSeconds: 10
      volumes:
        - name: ui-db-storage
          emptyDir:
            sizeLimit: 50Mi
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/instrumentor/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutating-webhook-configuration
  labels:
    app.kubernetes.io/name: pod-mutating-webhook
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: instrumentor
    app.kubernetes.io/part-of: odigos
webhooks:
  - name: pod-mutating-webhook.odigos.io
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lSQU0vdjRVSHJnL3l2ck5XZGlYNGFOWUF3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQXhNTWMyVnlkbWx1WnkxalpYSjBNQjRYRFRJMU1EUXlOREU0TlRZek0xb1hEVEkyTURReQpOREU0TlRZek0xb3dGekVWTUJNR0ExVUVBeE1NYzJWeWRtbHVaeTFqWlhKME1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNXWkpHVUlKRU1KWU5jTXRDNzY1MytCSkFpU2U3cFczSis1L1pRbFoKU1VtYUJjNjY0N01VcU1xUVQyeFRsNEFVOEdNditZN1RlL3kyUEhXUGxZR09nRDBJSEkxMXl1WUxpaEUxQXpQTApJNnBSdzZqcnRWZmUzOS9wWkVmMkxXL3ZoU24xYVZCbndvSXdqdW1GUVpnVEJseS9lWUh2ZEFTZ2pidDArNXF0ClRHSFZnYkI4SXhjQVJwaFhCRFpoUXZSRTdRNHROcDJydUZsbHZxbExXUDl4cW5sSUhTVEYwNHl6YThobDRpdzUKRmV0TGZIYWRsaFppYkkyTlNnMjVRQk9hbGIvTW1sNDJ6aElCU2x6ZFE0Q1VaQVFPRXNWQ2t4dUZEbXhjeUZtbApMSlMzancyV0Voc3YrQmNwUEx4M1V2ZW9xUXA5cjRFcW9KdHpJaklTNGh3SUx3SURBUUFCbzJFd1h6QU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZLem9rOWJVRXBBTWpPd0JldkdlSGJvcjVWbjlNQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBM1Q2akl3S0QydExGTWFNc0g5a01WbVhwOW0xNngxeEZIS3BGQlo2VTMxcGxDCmxYR1piUzc0SmtTcU4rbDJnRjVoTzhkVlY0YVVyNW51NEVGalpLeGdJTkQvOU1meExuMDlBZzhqdTBTREcyMzIKdTRJcEovN0ZrMjc2eEJZUmY3SXFuNTI4V1haUUhEeGdxemgxQ0hnWW5namF4eTROVTkyVjVIOElHNjlxTmNzNgowSjRaeXpCVlV0Y0h3ZHQ3YzVEYTFLby9NWlFzOERPVkNHNm41UE4xeCt0YjZ6ako0ZGJkcTJxTDROWkM5dSs3CjdUKzFQdGRvZTRsekM1Vklvd3V6TGNhZEVUcElpdDRvUlZSWEJmRlVXZHFJNE83QjFxSlJiZUtkNnZhenpUencKZ3ZlSWpPL3EyWjM2M0dNN3RSeEVUbTRyQjVCTzJMa3llSlFnelFNRAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: odigos-instrumentor
        namespace: default
        path: /mutate--v1-pod
        port: 9443
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
        scope: Namespaced
    failurePolicy: Ignore
    reinvocationPolicy: IfNeeded
    sideEffects: None
    timeoutSeconds: 10
    admissionReviewVersions: ["v1"]
---
# Source: odigos/templates/instrumentor/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: source-mutating-webhook-configuration
  labels:
    app.kubernetes.io/name: source-mutating-webhook
    app.kubernetes.io/instance: source-mutating-webhook-configuration
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: instrumentor
    app.kubernetes.io/part-of: odigos
webhooks:
  - name: source-mutating-webhook.odigos.io
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lSQU0vdjRVSHJnL3l2ck5XZGlYNGFOWUF3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQXhNTWMyVnlkbWx1WnkxalpYSjBNQjRYRFRJMU1EUXlOREU0TlRZek0xb1hEVEkyTURReQpOREU0TlRZek0xb3dGekVWTUJNR0ExVUVBeE1NYzJWeWRtbHVaeTFqWlhKME1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNXWkpHVUlKRU1KWU5jTXRDNzY1MytCSkFpU2U3cFczSis1L1pRbFoKU1VtYUJjNjY0N01VcU1xUVQyeFRsNEFVOEdNditZN1RlL3kyUEhXUGxZR09nRDBJSEkxMXl1WUxpaEUxQXpQTApJNnBSdzZqcnRWZmUzOS9wWkVmMkxXL3ZoU24xYVZCbndvSXdqdW1GUVpnVEJseS9lWUh2ZEFTZ2pidDArNXF0ClRHSFZnYkI4SXhjQVJwaFhCRFpoUXZSRTdRNHROcDJydUZsbHZxbExXUDl4cW5sSUhTVEYwNHl6YThobDRpdzUKRmV0TGZIYWRsaFppYkkyTlNnMjVRQk9hbGIvTW1sNDJ6aElCU2x6ZFE0Q1VaQVFPRXNWQ2t4dUZEbXhjeUZtbApMSlMzancyV0Voc3YrQmNwUEx4M1V2ZW9xUXA5cjRFcW9KdHpJaklTNGh3SUx3SURBUUFCbzJFd1h6QU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZLem9rOWJVRXBBTWpPd0JldkdlSGJvcjVWbjlNQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBM1Q2akl3S0QydExGTWFNc0g5a01WbVhwOW0xNngxeEZIS3BGQlo2VTMxcGxDCmxYR1piUzc0SmtTcU4rbDJnRjVoTzhkVlY0YVVyNW51NEVGalpLeGdJTkQvOU1meExuMDlBZzhqdTBTREcyMzIKdTRJcEovN0ZrMjc2eEJZUmY3SXFuNTI4V1haUUhEeGdxemgxQ0hnWW5namF4eTROVTkyVjVIOElHNjlxTmNzNgowSjRaeXpCVlV0Y0h3ZHQ3YzVEYTFLby9NWlFzOERPVkNHNm41UE4xeCt0YjZ6ako0ZGJkcTJxTDROWkM5dSs3CjdUKzFQdGRvZTRsekM1Vklvd3V6TGNhZEVUcElpdDRvUlZSWEJmRlVXZHFJNE83QjFxSlJiZUtkNnZhenpUencKZ3ZlSWpPL3EyWjM2M0dNN3RSeEVUbTRyQjVCTzJMa3llSlFnelFNRAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: odigos-instrumentor
        namespace: default
        path: /mutate-odigos-io-v1alpha1-source
        port: 9443
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups: ["odigos.io"]
        apiVersions: ["v1alpha1"]
        resources: ["sources"]
        scope: Namespaced
    failurePolicy: Fail
    reinvocationPolicy: IfNeeded
    sideEffects: None
    timeoutSeconds: 10
    admissionReviewVersions: ["v1"]
---
# Source: odigos/templates/instrumentor/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: source-validating-webhook-configuration
  labels:
    app.kubernetes.io/name: source-validating-webhook
    app.kubernetes.io/instance: source-validating-webhook-configuration
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: instrumentor
    app.kubernetes.io/part-of: odigos
webhooks:
  - name: source-validating-webhook.odigos.io
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lSQU0vdjRVSHJnL3l2ck5XZGlYNGFOWUF3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQXhNTWMyVnlkbWx1WnkxalpYSjBNQjRYRFRJMU1EUXlOREU0TlRZek0xb1hEVEkyTURReQpOREU0TlRZek0xb3dGekVWTUJNR0ExVUVBeE1NYzJWeWRtbHVaeTFqWlhKME1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNXWkpHVUlKRU1KWU5jTXRDNzY1MytCSkFpU2U3cFczSis1L1pRbFoKU1VtYUJjNjY0N01VcU1xUVQyeFRsNEFVOEdNditZN1RlL3kyUEhXUGxZR09nRDBJSEkxMXl1WUxpaEUxQXpQTApJNnBSdzZqcnRWZmUzOS9wWkVmMkxXL3ZoU24xYVZCbndvSXdqdW1GUVpnVEJseS9lWUh2ZEFTZ2pidDArNXF0ClRHSFZnYkI4SXhjQVJwaFhCRFpoUXZSRTdRNHROcDJydUZsbHZxbExXUDl4cW5sSUhTVEYwNHl6YThobDRpdzUKRmV0TGZIYWRsaFppYkkyTlNnMjVRQk9hbGIvTW1sNDJ6aElCU2x6ZFE0Q1VaQVFPRXNWQ2t4dUZEbXhjeUZtbApMSlMzancyV0Voc3YrQmNwUEx4M1V2ZW9xUXA5cjRFcW9KdHpJaklTNGh3SUx3SURBUUFCbzJFd1h6QU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZLem9rOWJVRXBBTWpPd0JldkdlSGJvcjVWbjlNQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBM1Q2akl3S0QydExGTWFNc0g5a01WbVhwOW0xNngxeEZIS3BGQlo2VTMxcGxDCmxYR1piUzc0SmtTcU4rbDJnRjVoTzhkVlY0YVVyNW51NEVGalpLeGdJTkQvOU1meExuMDlBZzhqdTBTREcyMzIKdTRJcEovN0ZrMjc2eEJZUmY3SXFuNTI4V1haUUhEeGdxemgxQ0hnWW5namF4eTROVTkyVjVIOElHNjlxTmNzNgowSjRaeXpCVlV0Y0h3ZHQ3YzVEYTFLby9NWlFzOERPVkNHNm41UE4xeCt0YjZ6ako0ZGJkcTJxTDROWkM5dSs3CjdUKzFQdGRvZTRsekM1Vklvd3V6TGNhZEVUcElpdDRvUlZSWEJmRlVXZHFJNE83QjFxSlJiZUtkNnZhenpUencKZ3ZlSWpPL3EyWjM2M0dNN3RSeEVUbTRyQjVCTzJMa3llSlFnelFNRAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: odigos-instrumentor
        namespace: default
        path: /validate-odigos-io-v1alpha1-source
        port: 9443
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups: ["odigos.io"]
        apiVersions: ["v1alpha1"]
        resources: ["sources"]
        scope: Namespaced
    failurePolicy: Ignore
    sideEffects: None
    timeoutSeconds: 10
    admissionReviewVersions: ["v1"]
---
# Source: odigos/templates/instrumentor/webhooks.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: webhook-cert
  namespace: default
  labels:
    app.kubernetes.io/name: instrumentor-cert
    app.kubernetes.io/instance: instrumentor-cert
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: instrumentor
    app.kubernetes.io/part-of: odigos
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWVENDQWoyZ0F3SUJBZ0lSQU8vWUJ6RFA5bVhhQ3AwZUpIekFKMWt3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQXhNTWMyVnlkbWx1WnkxalpYSjBNQjRYRFRJMU1EUXlOREU0TlRZek0xb1hEVEkyTURReQpOREU0TlRZek0xb3dGekVWTUJNR0ExVUVBeE1NYzJWeWRtbHVaeTFqWlhKME1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXkyOExIN1NGSGdEekdyQk1UVlVBakNYTVlLWVRzSGNEaFVQdkZVZmIKU3gvZjNmck9STndCZmxFSHdIUC9TOWNtRWJLWm8rKzZ5MElUdU5Bb3VYUkhVNklEM3YvOGlRR3lLS1ZkeW01VQpCUnBZalZqWDRsOWVPRys0STN6TTgzNGxuVElTSncrVFV4Tmo3dEwrTGppeVZvTDJPQUI1OXh3blIrSmlMKzBHCjhrUnJJQmV5UkRlVk9ta2h3OUNYNVlQWGIwUzNwbTZKcFRUTmF3c0YyVnp1ajRnY3FqMjRZelVBb2JEY1ZNNFkKajVzMUZRVkRRK2NZVEdqL1QwRWcrMzJ5K1JROXdPbjRadFNZdmdoT0IvYUFqQmRFMHlLU0g0QngwVldPVFBjawpYOCsva2lFZ1RkcmRUd3NpdGh6NmNIYWlRZE9NZ1NpU3g1VG5zdWRaNVpobFVRSURBUUFCbzRHYk1JR1lNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURCWkJnTlZIUkVFVWpCUWdoOXZaR2xuYjNNdGFXNXpkSEoxYldWdWRHOXlMbVJsWm1GMQpiSFF1YzNaamdpMXZaR2xuYjNNdGFXNXpkSEoxYldWdWRHOXlMbVJsWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1CmJHOWpZV3d3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZPWFdsR2ZmbjZPdTBsK2M1cGxnRzVBZGJiQ1YwWmwKZExsWEk0OWFhL0dETU1yb0drUm45Y3hUSldxTlFlZDMvSnVRVnhvZVE3QjN2VDkwY2NTRms3R3AxeWpqZ3RPVApVa1hCK2N4ZUFiMDF1WTlvdDQwMnk2UWg5MlN2UmhzUkRvS05iN0ZYczhNSmtaQWhMOC9PQWFLRGwyU2RqNzNPCkw5V2wxYUZpTmhmWDNiNlZ5ZCtaVzRleDZibENZUW54T2JQdHVZYVE3SDc5QngvNXR2TUM1U1Z3eGhCaEx5N2cKeDFRdnFNeG81NUU0RkluODlkbUVVY1l1UFYzalNLOThiZnZMcXlqVWVlNktYUkhtTjlLYnMxTWs2cy9nYUs5RwpTaXorZTFQRWdEbCtjRlExVWlLcEt1cjJnaTNaSXpRNVNnaFJ1S0JPaU5OUXp3L2dQWlE3MmcwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTI4TEg3U0ZIZ0R6R3JCTVRWVUFqQ1hNWUtZVHNIY0RoVVB2RlVmYlN4L2YzZnJPClJOd0JmbEVId0hQL1M5Y21FYktabysrNnkwSVR1TkFvdVhSSFU2SUQzdi84aVFHeUtLVmR5bTVVQlJwWWpWalgKNGw5ZU9HKzRJM3pNODM0bG5USVNKdytUVXhOajd0TCtMaml5Vm9MMk9BQjU5eHduUitKaUwrMEc4a1JySUJleQpSRGVWT21raHc5Q1g1WVBYYjBTM3BtNkpwVFROYXdzRjJWenVqNGdjcWoyNFl6VUFvYkRjVk00WWo1czFGUVZEClErY1lUR2ovVDBFZyszMnkrUlE5d09uNFp0U1l2Z2hPQi9hQWpCZEUweUtTSDRCeDBWV09UUGNrWDgrL2tpRWcKVGRyZFR3c2l0aHo2Y0hhaVFkT01nU2lTeDVUbnN1ZFo1WmhsVVFJREFRQUJBb0lCQUE5OUhDSDFGdGlHdG51dQo5aFJDTjBrMFhJZjBSUlgvcmJreEI2dzlYUlV1YjFkQmtBQmVwczkxQUd2VytSWlBZbkxoQUFFakVMd0dneVZrClZlRnUyTHBsb0xsVEVLbG13MmVFVmF5Q3MydHpDdEJ5TmZlaWpyUXB6MkdHVUQxdXVwTHFHOGMxRUtDMzNua3gKdjlBSm1ZeHNLcTV2WE5ualh4dENRWHNJSnluOVNGRnJNeHk0NlN5SXJKVGsrdVpvdHBxSDluN1FYZTUyTFBQUwpPOUU3M3F5b2c4RDZyZGJoTjIzUGhnRXpUbGtRZ0RLTWJzV3U3U3JPNGtKTXFuMjNPWUEweVVBVmIyQVN1QTJTClpJS2lSYkNSTDJLc1Y3OCtvWG56UDVLM1ZGM0hYSUliMmI0aW1tZmhrOVpvaXVFN0wyOUQ1MzIza0JPaHFaR0cKaVQ3c25hVUNnWUVBNHJxQjc0ZFpSSTlQYTdBRGNUc3grcEY4Sm5tZ3Z0VjdReG9VN2E4Z3g3UWd0YmNoODFkOApGOUVSN3lmQkZUZlExOWhvRU16c2FQT2ZMRmZKZlpoLys0UHI1UmxMVlpPRC9yd3BGRVJYZFliRHVBV0dBWkZqCmNIYnFYYUxlN0h4Vk0zV0FHSG1weWx3WmV6clk1QjZ4VTl0UER3Q1FTVWtKRFpaTGJGL1JxUlVDZ1lFQTViS2gKczB5RmovNmV4ekpxSVRoR2YzMi81U2tEclB4N3FHZ3ExNEpoWjIrZFo4VlZ1bXd2blNBbGNmNWNLV0VwVkZoNgptZG9BT0lNUzlNZTdVZ3hqdzZ2ODlRb2tTY0pkMGF2Y2xFY25PcGJGSjZtTGo2UFZvT0hxdnhPYjB4NmlmSXJRCmF5VEM5VXVnTlhna2V6SnV5TTNuM2pnY1dDaGFxbTFCWmhRMDRrMENnWUVBbXIvSHpmQW9tcVhpQkZOSGxqSmMKQTNUbk11K1RLbzFWSzFDUzlrT3c4UDFkMGdsano4NW5jVzRPZXBnOHJqbkJmb0ZEVGl4QU04WU1YMXl2dHR5dQpoY0hkOFNtWmhKaEI0RTBYRUxFd3JKUEY1RVZJMktzZUh2WGJNdnZtZ2F5L0RuZGxiYzhrZDJ6eksydlgrNk9EClR3UUI2dkJzaXNpaHVEZGIxV1YxR1owQ2dZQVBaTEZCZXRkWWx3KzgrYnZ6RGZwcmdObmpXYVJOYTM0K0F2MGMKQkRqUzNjQUd2RXJLZTRXVldob29VWXVMbWw5U3I3dEhwRHh2alJrd0hsS0haUjBxZDlRejk4SUd6MmZLTFdKUwo3WkhMYzE4ekVVR3hGcUd5Ym5GMDdMTjhxb2pwSDhSbjZjYkcrWko3QXRvdkIybzFPdGRYSlJ1QkxQTW1pTHZoClEybG40UUtCZ1FEZTUvTTAvSW5pZWh1T05oSjFxSlVNZHFaUXl6ZDZTVmt6SS9XaGwyUUkwdkNKK1JxaEVCYisKRDZCeTUrSlhteHlDcmpMa3ZLcVNwSEM4SDVmcWRTazhZSC91RnZHYlhlemVvVmp6SFM2VVMrYWoyQzJkSHgvYwpMTVVKQ0o3VnB1U3Z4NWNQWTF0YXJBT1JrVk5TQ3d5NXkxditwQVBJQS9EaDRiOUpjaDNhOFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: odigos/templates/odigos-config-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-config
  namespace: 'default'
  annotations:
    'helm.sh/hook': post-install,post-upgrade
  labels:
    odigos.io/config: '1'
    odigos.io/system-object: 'true'
data:
  config.yaml: |
    configVersion: 1
    uiMode: normal
    collectorGateway:
      MinReplicas: 1
      MaxReplicas: 10
      requestMemoryMiB: 500
      limitMemoryMiB: 625
      requestCPUm: 500
      limitCPUm: 1000
      memoryLimiterLimitMiB: 450
      memoryLimiterSpikeLimitMiB: 90
      goMemLimitMiB: 340
    collectorNode:
      collectorOwnMetricsPort: 55682
      requestMemoryMiB: 250
      limitMemoryMiB: 500
      requestCPUm: 250
      limitCPUm: 500
      memoryLimiterLimitMiB: 450
      memoryLimiterSpikeLimitMiB: 55
      goMemLimitMiB: 360
    telemetryEnabled: true
    openshiftEnabled: false
    psp: false
    mountMethod: k8s-virtual-device
    nodeSelector:
      kubernetes.io/os: linux
---
# Source: odigos/templates/cleanup/cleanup-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-job
  namespace: default
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 30
  activeDeadlineSeconds: 240
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: cleanup-sa
      containers:
      - name: cleanup
        image: "registry.odigos.io/odigos-cli:v0.0.0"
        args: ["uninstall", "--yes"]
      restartPolicy: Never
