apiVersion: odigos.io/v1alpha1
kind: CollectorsGroup
metadata:
  name: odigos-data-collection
  namespace: odigos-test-ns
spec:
  role: NODE_COLLECTOR
status:
  ready: true
---
apiVersion: odigos.io/v1alpha1
kind: CollectorsGroup
metadata:
  name: odigos-gateway
  namespace: odigos-test-ns
spec:
  role: CLUSTER_GATEWAY
status:
  ready: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    odigos.io/collector-role: "CLUSTER_GATEWAY"
  name: odigos-gateway
  namespace: odigos-test-ns
  ownerReferences:
    - apiVersion: odigos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: CollectorsGroup
      name: odigos-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      odigos.io/collector-role: "CLUSTER_GATEWAY"
  template:
    metadata:
      labels:
        odigos.io/collector-role: "CLUSTER_GATEWAY"
    spec:
      containers:
        - env:
            - name: ODIGOS_VERSION
              valueFrom:
                configMapKeyRef:
                  key: ODIGOS_VERSION
                  name: odigos-deployment
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: GOMEMLIMIT
              (value != null): true
          name: gateway
          resources:
            requests:
              (memory != null): true
          volumeMounts:
            - mountPath: /conf
              name: collector-conf
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: collector-conf
                path: collector-conf.yaml
            name: odigos-gateway
          name: collector-conf
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-gateway
  namespace: odigos-test-ns
  ownerReferences:
    - apiVersion: odigos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: CollectorsGroup
      name: odigos-gateway
(data != null): true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-data-collection
  namespace: odigos-test-ns
  ownerReferences:
    - apiVersion: odigos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: CollectorsGroup
      name: odigos-data-collection
(data != null): true
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    odigos.io/collector-role: "NODE_COLLECTOR"
  name: odigos-data-collection
  namespace: odigos-test-ns
  ownerReferences:
    - apiVersion: odigos.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: CollectorsGroup
      name: odigos-data-collection
spec:
  selector:
    matchLabels:
      odigos.io/collector-role: "NODE_COLLECTOR"
  template:
    metadata:
      labels:
        odigos.io/collector-role: "NODE_COLLECTOR"
    spec:
      containers:
        - name: data-collection
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /conf
              name: conf
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /var/log
              name: varlog
              readOnly: true
            - mountPath: /var/lib/kubelet/pod-resources
              name: kubeletpodresources
              readOnly: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      securityContext: {}
      serviceAccount: odigos-data-collection
      serviceAccountName: odigos-data-collection
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: conf
                path: conf.yaml
            name: odigos-data-collection
          name: conf
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: ""
          name: kubeletpodresources
status:
  numberAvailable: 1
  numberReady: 1
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: frontend
spec:
  containers:
    - name: frontend
      resources:
        limits:
          instrumentation.odigos.io/java-native-community: "1"
        requests:
          instrumentation.odigos.io/java-native-community: "1"
status:
  containerStatuses:
    - name: frontend
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: coupon
spec:
  containers:
    - name: coupon
      resources:
        limits:
          instrumentation.odigos.io/javascript-native-community: "1"
        requests:
          instrumentation.odigos.io/javascript-native-community: "1"
status:
  containerStatuses:
    - name: coupon
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: inventory
spec:
  containers:
    - name: inventory
      resources:
        limits:
          instrumentation.odigos.io/python-native-community: "1"
        requests:
          instrumentation.odigos.io/python-native-community: "1"
status:
  containerStatuses:
    - name: inventory
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: membership
spec:
  containers:
    - name: membership
      resources:
        limits:
          instrumentation.odigos.io/go-ebpf-community: "1"
        requests:
          instrumentation.odigos.io/go-ebpf-community: "1"
status:
  containerStatuses:
    - name: membership
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: pricing
spec:
  containers:
    - name: pricing
      resources:
        limits:
          instrumentation.odigos.io/dotnet-native-community: "1"
        requests:
          instrumentation.odigos.io/dotnet-native-community: "1"
status:
  containerStatuses:
    - name: pricing
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: default
  labels:
    instrumented-app: deployment-coupon
status:
  healthy: true
  identifyingAttributes:
    - key: service.instance.id
      (value != null): true
    - key: telemetry.sdk.language
      value: nodejs
    - key: process.runtime.version
      (value != null): true
    - key: telemetry.distro.version
      value: e2e-test
    - key: process.pid
      (value != null): true
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: default
  labels:
    instrumented-app: deployment-inventory
status:
  healthy: true
  identifyingAttributes:
    - key: service.instance.id
      (value != null): true
    - key: process.pid
      (value != null): true
    - key: telemetry.sdk.language
      value: python
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: default
  labels:
    instrumented-app: deployment-membership
status:
  healthy: true
  reason: LoadedSuccessfully
