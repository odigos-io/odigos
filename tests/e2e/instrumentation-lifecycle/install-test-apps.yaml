apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-minimum-version
  namespace: default
  labels:
    app: nodejs-minimum-version
    odigos.io/e2e: test-workload
spec:
  selector:
    matchLabels:
      app: nodejs-minimum-version
  template:
    metadata:
      labels:
        app: nodejs-minimum-version
    spec:
      containers:
        - name: nodejs-minimum-version
          image: public.ecr.aws/odigos/nodejs-minimum-version:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
---
kind: Service
apiVersion: v1
metadata:
  name: nodejs-minimum-version
  namespace: default
spec:
  selector:
    app: nodejs-minimum-version
  ports:
    - protocol: TCP
      port: 3000
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nodejs-latest-version
  namespace: default
  labels:
    app: nodejs-latest-version
    odigos.io/e2e: test-workload
spec:
  selector:
    matchLabels:
      app: nodejs-latest-version
  template:
    metadata:
      labels:
        app: nodejs-latest-version
    spec:
      containers:
        - name: nodejs-latest-version
          image: public.ecr.aws/odigos/nodejs-latest-version:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
---
kind: Service
apiVersion: v1
metadata:
  name: nodejs-latest-version
  namespace: default
spec:
  selector:
    app: nodejs-latest-version
  ports:
    - protocol: TCP
      port: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-supported-version
  namespace: default
  labels:
    app: java-supported-version
    odigos.io/e2e: test-workload
spec:
  selector:
    matchLabels:
      app: java-supported-version
  template:
    metadata:
      labels:
        app: java-supported-version
    spec:
      containers:
        - name: java-supported-version
          image: public.ecr.aws/odigos/java-supported-version:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 20
---
kind: Service
apiVersion: v1
metadata:
  name: java-supported-version
  namespace: default
spec:
  selector:
    app: java-supported-version
  ports:
    - protocol: TCP
      port: 3000
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: python-latest-version
  namespace: default
  labels:
    app: python-latest-version
    odigos.io/e2e: test-workload
spec:
  selector:
    matchLabels:
      app: python-latest-version
  template:
    metadata:
      labels:
        app: python-latest-version
    spec:
      containers:
        - name: python-latest-version
          image: public.ecr.aws/odigos/python-latest-version:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "myapp.settings"
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
---
kind: Service
apiVersion: v1
metadata:
  name: python-latest-version
  namespace: default
spec:
  selector:
    app: python-latest-version
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8000
