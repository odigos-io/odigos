apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-latest-version
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/java-latest-version:v0.0.1
      name: java-latest-version
      (env[?name=='JAVA_OPTS']): []
      (env[?name=='JAVA_TOOL_OPTIONS']): []
      (env[?name=='LD_PRELOAD']):
        - value: "/var/odigos/loader/loader.so"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-supported-manifest-env
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/java-supported-manifest-env:v0.0.1
      name: java-supported-manifest-env
      (env[?name=='JAVA_TOOL_OPTIONS']):
      - value: "-Dnot.work=true"
      (env[?name=='JAVA_OPTS']): []
      (env[?name=='LD_PRELOAD']):
      - value: "/var/odigos/loader/loader.so"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-supported-docker-env
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/java-supported-docker-env:v0.0.1
      name: java-supported-docker-env
      # LD_PRELOAD is declared in the Dockerfile, hence we can't add the loader
      # in this test the user specified the env var injection to be loader only,
      # hence we assert here that nothing is added from our side.
      (env[?name=='JAVA_TOOL_OPTIONS']): []
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: inventory
  namespace: default
spec:
  containers:
    - image: registry.odigos.io/odigos-demo-inventory:v0.1.14
      # the user defined PYTHONPATH remains unchanged
      # and we add the loader.
      name: inventory
      (env[?name=='PYTHONPATH']):
       - valueFrom:
          configMapKeyRef:
            key: PYTHONPATH
            name: env-configmap
      (env[?name=='ORIGINAL_PYTHONPATH']): []
      (env[?name=='LD_PRELOAD']):
      - value: "/var/odigos/loader/loader.so"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: python-alpine
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/python-alpine:v0.0.1
      name: python-alpine
      # the python-alpine container is running in secure-execution mode - hence we should avoid using the loader
      # since in this test the user specified the env var injection to be loader only,
      # hence we assert here that nothing is added from our side.
      (env[?name=='PYTHONPATH']):
      - value: /app
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: frontend
  namespace: default
spec:
  containers:
    - image: registry.odigos.io/odigos-demo-frontend:v0.1.14
      name: frontend
      # the user defined PYTHONPATH remains unchanged
      # and we add the loader.
      (env[?name=='JAVA_TOOL_OPTIONS']):
       - valueFrom:
          configMapKeyRef:
            key: JAVA_TOOL_OPTIONS
            name: env-configmap
      (env[?name=='ORIGINAL_JAVA_TOOL_OPTIONS']): []
      (env[?name=='LD_PRELOAD']):
      - value: "/var/odigos/loader/loader.so"
