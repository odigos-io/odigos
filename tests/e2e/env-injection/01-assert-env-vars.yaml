apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-latest-version
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/java-latest-version:v0.0.1
      name: java-latest-version
      (env[?name=='JAVA_TOOL_OPTIONS']):
       - value: "-javaagent:/var/odigos/java/javaagent.jar"
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-supported-manifest-env
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/java-supported-manifest-env:v0.0.1
      name: java-supported-manifest-env
      (env[?name=='JAVA_TOOL_OPTIONS']):
      - value: "-Dnot.work=true -javaagent:/var/odigos/java/javaagent.jar"
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: java-supported-docker-env
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/java-supported-docker-env:v0.0.1
      name: java-supported-docker-env
    # the container has a value defined for JAVA_OPTS, we should not touch it
      (env[?name=='JAVA_OPTS']): []
    # JAVA_TOOL_OPTIONS is not set in the Dockerfile of java-supported-docker-env,
    # so we need to ensure it is also not set in the pod spec.
      (env[?name=='JAVA_TOOL_OPTIONS']):
      - value: -javaagent:/var/odigos/java/javaagent.jar
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: inventory
  namespace: default
spec:
  containers:
    - image: registry.odigos.io/odigos-demo-inventory:v0.1.14
      name: inventory
      # We are checking that in case valueFrom exists we're appending Odigos additions to the ORIGINAL_{envar}
      (env[?name=='PYTHONPATH']):
      - value: $(ORIGINAL_PYTHONPATH):/var/odigos/python:/var/odigos/python/opentelemetry/instrumentation/auto_instrumentation
      (env[?name=='ORIGINAL_PYTHONPATH']):
      - valueFrom:
          configMapKeyRef:
            key: PYTHONPATH
            name: env-configmap
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: python-alpine
  namespace: default
spec:
  containers:
    - image: public.ecr.aws/odigos/python-alpine:v0.0.1
      name: python-alpine
      (env[?name=='PYTHONPATH']):
      - value: /app:/var/odigos/python:/var/odigos/python/opentelemetry/instrumentation/auto_instrumentation
      (env[?name=='LD_PRELOAD']): []
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: frontend
  namespace: default
spec:
  containers:
    - image: registry.odigos.io/odigos-demo-frontend:v0.1.14
      name: frontend
      # We are checking that in case valueFrom exists we're appending Odigos additions to the ORIGINAL_{envar}
      (env[?name=='JAVA_TOOL_OPTIONS']):
      - value: $(ORIGINAL_JAVA_TOOL_OPTIONS) -javaagent:/var/odigos/java/javaagent.jar
      (env[?name=='ORIGINAL_JAVA_TOOL_OPTIONS']):
      - valueFrom:
          configMapKeyRef:
            key: JAVA_TOOL_OPTIONS
            name: env-configmap
      (env[?name=='LD_PRELOAD']): []