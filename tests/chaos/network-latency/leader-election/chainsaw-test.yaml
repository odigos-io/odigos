apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: helm-chart
spec:
  description: This tests adds network latency on the instrumentor pod in order to test the leader election mechanism (HPE-11)
  skipDelete: true
  steps:
    - name: Install chaos-mesh
      try:
        - script:
            timeout: 10m
            content: |
              if helm status chaos-mesh -n chaos-mesh >/dev/null 2>&1; then
                echo "chaos-mesh helm already installed, probably from previous run. Skipping..."
              else
                helm repo add chaos-mesh https://charts.chaos-mesh.org
                helm repo update
                RUNTIME=$(kubectl get node "$(kubectl get nodes -o jsonpath='{.items[0].metadata.name}')" -o=jsonpath='{.status.nodeInfo.containerRuntimeVersion}')
                if [[ $RUNTIME == docker://* ]]; then
                    echo "Docker runtime detected."
                    helm install chaos-mesh chaos-mesh/chaos-mesh -n chaos-testing --create-namespace
                elif [[ $RUNTIME == containerd://* ]]; then
                    helm install chaos-mesh chaos-mesh/chaos-mesh -n=chaos-mesh --set chaosDaemon.runtime=containerd --set chaosDaemon.socketPath=/run/containerd/containerd.sock --create-namespace
                else
                    echo "Error: Unsupported container runtime detected: $RUNTIME" >&2
                    exit 1
                fi
              fi

    - name: Install Odigos
      try:
        - script:
            timeout: 3m
            content: |
              # The pwd is the directory of this file, so we have to walk up to the project root to find the helm chart
              P="../../../.."
              helm upgrade --install odigos $P/helm/odigos --create-namespace --namespace odigos-test --set image.tag=e2e-test --set imagePrefix=registry.odigos.io
              kubectl label namespace odigos-test odigos.io/system-object="true"

    - name: Verify Odigos Installation
      try:
        - script:
            timeout: 5m
            content: |
              echo "Starting Odigos version check..."
              export ACTUAL_VERSION=$(../../../../cli/odigos version --cluster)
              echo "Actual Version: $ACTUAL_VERSION"

              if [ "$MODE" = "cross-cloud-tests" ]; then
                if [ "$ACTUAL_VERSION" != "$COMMIT_HASH" ]; then
                  echo "Odigos version is not the expected commit hash, got $ACTUAL_VERSION"
                  exit 1
                fi
                kubectl wait --for=condition=ready pods --all -n odigos-test --timeout=40s
              fi
        - assert:
            file: ../../../common/assert/odigos-installed.yaml

    - name: Update deployment probes
      try:
        - script:
            # The test adds latency to all of the requests in the pod, the purpose of this patch is to prevent kubernetes from assuming the service is in not healthy (The probes would fail with timeout otherwise)
            timeout: 3m
            content: |
              kubectl patch deployment odigos-instrumentor -n odigos-test --type=json -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/readinessProbe/timeoutSeconds", "value":10}, {"op": "replace", "path": "/spec/template/spec/containers/0/livenessProbe/timeoutSeconds", "value":10}]'

    - name: Wait for chaos-mesh to be ready
      try:
        - script:
            timeout: 10m
            content: |
              kubectl wait --for=condition=ready pods --all -n chaos-mesh --timeout=7m

    - name: Apply chaos experiment
      try:
        - script:
            timeout: 3m
            content: |
              NAMESPACE="odigos-test"
              APP_SELECTOR="odigos-instrumentor"
              POD_TEMPLATE_HASH=$(kubectl get pod -n "$NAMESPACE" -l app.kubernetes.io/name="$APP_SELECTOR" -o jsonpath='{.items[0].metadata.labels.pod-template-hash}')
              LATENCY="2500ms"
              JITTER="0ms"

              yq eval "
                .metadata.namespace = \"$NAMESPACE\" |
                .spec.selector.labelSelectors.\"app.kubernetes.io/name\" = \"$APP_SELECTOR\" |
                .spec.selector.labelSelectors.\"pod-template-hash\" = \"$POD_TEMPLATE_HASH\" |
                .spec.delay.latency = \"$LATENCY\" |
                .spec.delay.jitter = \"$JITTER\"
              " ../../experiments/network-latency.yaml | kubectl apply -f -

    - name: Allow the chaos experiment to take affect
      try:
        - script:
            timeout: 6m
            content: |
              sleep 5m

    - name: Assert Odigos still up
      try:
        - assert:
            timeout: 5m
            file: ../../../common/assert/odigos-installed.yaml
