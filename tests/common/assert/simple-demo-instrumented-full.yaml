### Simple-demo Pods ###
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: frontend
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: frontend
      resources:
        limits:
          instrumentation.odigos.io/generic: '1'
        requests:
          instrumentation.odigos.io/generic: '1'
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: frontend
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: java-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
      (env[?name == 'NODE_IP']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
      (env[?name == 'OTEL_EXPORTER_OTLP_ENDPOINT']):
        - (($values.k8sMinorVersion < `26` && value == 'http://$(NODE_IP):4318') || value == 'http://odigos-data-collection-local-traffic.odigos-test:4318'): true
      (env[?name == 'OTEL_SERVICE_NAME']):
        - value: frontend
      (env[?name == 'OTEL_RESOURCE_ATTRIBUTES']):
        - value: 'k8s.pod.name=$(ODIGOS_POD_NAME),k8s.container.name=frontend,k8s.namespace.name=default,k8s.deployment.name=frontend'
      (env[?name == 'JAVA_TOOL_OPTIONS']):
        - value: '-javaagent:/var/odigos/java/javaagent.jar'
      (env[?name == 'OTEL_TRACES_EXPORTER']):
        - value: otlp
      (env[?name == 'OTEL_METRICS_EXPORTER']):
        - value: none
      (env[?name == 'OTEL_LOGS_EXPORTER']):
        - value: none
status:
  containerStatuses:
    - name: frontend
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: coupon
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: coupon
      resources:
        limits:
          instrumentation.odigos.io/generic: '1'
        requests:
          instrumentation.odigos.io/generic: '1'
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: coupon
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: nodejs-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
      (env[?name == 'NODE_IP']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
      (env[?name == 'ODIGOS_OPAMP_SERVER_HOST']):
        - (($values.k8sMinorVersion < `26` && value == '$(NODE_IP):4320') || value == 'odiglet-local.odigos-test:4320'): true
      (env[?name == 'OTEL_EXPORTER_OTLP_ENDPOINT']):
        - (($values.k8sMinorVersion < `26` && value == 'http://$(NODE_IP):4318') || value == 'http://odigos-data-collection-local-traffic.odigos-test:4318'): true
      (env[?name == 'NODE_OPTIONS']):
        - value: '--require /var/odigos/nodejs-community/autoinstrumentation.js'
status:
  containerStatuses:
    - name: coupon
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: inventory
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: inventory
      resources:
        limits:
          instrumentation.odigos.io/generic: '1'
        requests:
          instrumentation.odigos.io/generic: '1'
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: inventory
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: python-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
      (env[?name == 'NODE_IP']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
      (env[?name == 'ODIGOS_OPAMP_SERVER_HOST']):
        - (($values.k8sMinorVersion < `26` && value == '$(NODE_IP):4320') || value == 'odiglet-local.odigos-test:4320'): true
      (env[?name == 'OTEL_EXPORTER_OTLP_ENDPOINT']):
        - (($values.k8sMinorVersion < `26` && value == 'http://$(NODE_IP):4318') || value == 'http://odigos-data-collection-local-traffic.odigos-test:4318'): true
      (env[?name == 'PYTHONPATH']):
        - value: '/bar:/var/odigos/python:/var/odigos/python/opentelemetry/instrumentation/auto_instrumentation'
status:
  containerStatuses:
    - name: inventory
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: membership
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: membership
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: membership
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: golang-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
status:
  containerStatuses:
    - name: membership
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: pricing
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: pricing
      resources:
        limits:
          instrumentation.odigos.io/dotnet-native-community: '1'
        requests:
          instrumentation.odigos.io/dotnet-native-community: '1'
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: pricing
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: dotnet-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
      (env[?name == 'OTEL_SERVICE_NAME']):
        - value: pricing
      (env[?name == 'OTEL_RESOURCE_ATTRIBUTES']):
        - value: 'k8s.pod.name=$(ODIGOS_POD_NAME),k8s.container.name=pricing,k8s.namespace.name=default,k8s.deployment.name=pricing'
status:
  containerStatuses:
    - name: pricing
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: currency
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: currency
      resources:
        limits:
          instrumentation.odigos.io/generic: '1'
        requests:
          instrumentation.odigos.io/generic: '1'
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: currency
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: php-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
      (env[?name == 'OTEL_SERVICE_NAME']):
        - value: currency
      (env[?name == 'OTEL_RESOURCE_ATTRIBUTES']):
        - value: 'k8s.pod.name=$(ODIGOS_POD_NAME),k8s.container.name=currency,k8s.namespace.name=default,k8s.deployment.name=currency'
      (env[?name == 'OTEL_LOGS_EXPORTER']):
        - value: none
      (env[?name == 'OTEL_METRICS_EXPORTER']):
        - value: none
      (env[?name == 'OTEL_TRACES_EXPORTER']):
        - value: otlp
      (env[?name == 'OTEL_EXPORTER_OTLP_ENDPOINT']):
        - (($values.k8sMinorVersion < `26` && value == 'http://$(NODE_IP):4318') || value == 'http://odigos-data-collection-local-traffic.odigos-test:4318'): true
      (env[?name == 'PHP_INI_SCAN_DIR']):
        - value: ':/var/odigos/php/8.2'
      (env[?name == 'OTEL_PHP_AUTOLOAD_ENABLED']):
        - value: 'true'
      (env[?name == 'OTEL_EXPORTER_OTLP_PROTOCOL']):
        - value: 'http/protobuf'
      (env[?name == 'OTEL_PROPAGATORS']):
        - value: 'tracecontext,baggage'
    - name: nginx
status:
  containerStatuses:
    - name: currency
      ready: true
      restartCount: 0
      started: true
    - name: nginx
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  labels:
    app: geolocation
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: odigos.io/odiglet-oss-installed
                operator: In
                values:
                  - 'true'
  containers:
    - name: geolocation
      resources:
        limits:
          instrumentation.odigos.io/generic: '1'
        requests:
          instrumentation.odigos.io/generic: '1'
      (env[?name == 'ODIGOS_CONTAINER_NAME']):
        - value: geolocation
      (env[?name == 'ODIGOS_DISTRO_NAME']):
        - value: ruby-community
      (env[?name == 'ODIGOS_POD_NAME']):
        - valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: default
      (env[?name == 'OTEL_SERVICE_NAME']):
        - value: geolocation
      (env[?name == 'OTEL_RESOURCE_ATTRIBUTES']):
        - value: 'k8s.pod.name=$(ODIGOS_POD_NAME),k8s.container.name=geolocation,k8s.namespace.name=default,k8s.deployment.name=geolocation'
      (env[?name == 'OTEL_LOGS_EXPORTER']):
        - value: none
      (env[?name == 'OTEL_METRICS_EXPORTER']):
        - value: none
      (env[?name == 'OTEL_TRACES_EXPORTER']):
        - value: otlp
      (env[?name == 'OTEL_EXPORTER_OTLP_ENDPOINT']):
        - (($values.k8sMinorVersion < `26` && value == 'http://$(NODE_IP):4318') || value == 'http://odigos-data-collection-local-traffic.odigos-test:4318'): true
      (env[?name == 'OTEL_EXPORTER_OTLP_PROTOCOL']):
        - value: 'http/protobuf'
      (env[?name == 'OTEL_PROPAGATORS']):
        - value: 'tracecontext,baggage'
      (env[?name == 'RUBYOPT']):
        - value: '-r/var/odigos/ruby/3.4/index.rb'
      (env[?name == 'ODIGOS_GEM_PATH']):
        - value: '/var/odigos/ruby/3.4/bundle'
status:
  containerStatuses:
    - name: geolocation
      ready: true
      restartCount: 0
      started: true
  phase: Running
---
#### Instrumentation Configs ####
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-coupon
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coupon
status:
  runtimeDetailsByContainer:
    - containerName: coupon
      language: javascript
      runtimeVersion: 18.3.0
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-frontend
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
status:
  runtimeDetailsByContainer:
    - containerName: frontend
      language: java
      runtimeVersion: 17.0.15+6
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-inventory
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: inventory
status:
  runtimeDetailsByContainer:
    - containerName: inventory
      language: python
      runtimeVersion: 3.11.13
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-membership
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: membership
status:
  runtimeDetailsByContainer:
    - containerName: membership
      language: go
      runtimeVersion: 1.21.4
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-pricing
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pricing
status:
  runtimeDetailsByContainer:
    - containerName: pricing
      language: dotnet
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-currency
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currency
status:
  (runtimeDetailsByContainer[?containerName=='currency']):
    - language: php
      runtimeVersion: 8.2.28
      secureExecutionMode: false
  (runtimeDetailsByContainer[?containerName=='nginx']):
    - language: nginx
      runtimeVersion: 1.27.5
      secureExecutionMode: false
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationConfig
metadata:
  name: deployment-geolocation
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: geolocation
status:
  (runtimeDetailsByContainer[?containerName=='geolocation']):
    - language: ruby
      runtimeVersion: 3.4.4
      secureExecutionMode: false
---
### Instrumentation Instances ###
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: default
  labels:
    instrumented-app: deployment-coupon
status:
  healthy: true
  identifyingAttributes:
    - key: service.instance.id
      (value != null): true
    - key: telemetry.sdk.language
      value: nodejs
    - key: process.runtime.version
      (value != null): true
    - key: telemetry.distro.version
      (value != null): true
    - key: process.vpid
      (value != null): true
    - key: k8s.namespace.name
      (value != null): true
    - key: k8s.container.name
      (value != null): true
    - key: k8s.pod.name
      (value != null): true
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: default
  labels:
    instrumented-app: deployment-inventory
status:
  healthy: true
  identifyingAttributes:
    - key: service.instance.id
      (value != null): true
    - key: process.vpid
      (value != null): true
    - key: telemetry.sdk.language
      value: python
    - key: k8s.namespace.name
      (value != null): true
    - key: k8s.container.name
      (value != null): true
    - key: k8s.pod.name
      (value != null): true
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: default
  labels:
    instrumented-app: deployment-membership
status:
  healthy: true
  reason: LoadedSuccessfully
