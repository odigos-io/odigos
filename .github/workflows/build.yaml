name: build

on:
  pull_request:
    branches:
      - main

jobs:
  build-autoscaler:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Autoscaler Image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: false
          tags: autoscaler:pr-${{ github.event.number }}
          build-args: SERVICE_NAME=autoscaler
  build-scheduler:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Scheduler Image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: false
          tags: scheduler:pr-${{ github.event.number }}
          build-args: SERVICE_NAME=scheduler
  build-and-test-instrumentor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - name: Build Instrumentor Image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: false
          tags: instrumentor:pr-${{ github.event.number }}
          build-args: SERVICE_NAME=instrumentor
      - name: run tests
        working-directory: ./instrumentor
        run: |
          make test

  build-and-test-odiglet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build Odiglet Image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: odiglet/Dockerfile
          context: .
          push: false
          tags: odiglet:pr-${{ github.event.number }}
      - name: Install build dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y clang llvm libbpf-dev
      - name: run tests
        working-directory: ./odiglet
        run: |
          make test
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Frontend Image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: frontend/Dockerfile
          context: .
          push: false
          tags: frontend:pr-${{ github.event.number }}

  build-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - name: Set up Goreleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: build --snapshot --clean

  test-k8sutils:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - name: Test k8sutils module
        working-directory: ./k8sutils
        run: |
          go test -v ./...

  test-common:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - name: Test common module
        working-directory: ./common
        run: |
          make test

  test-procdiscovery:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - name: Test procdiscovery module
        working-directory: ./procdiscovery
        run: |
          go test -v ./...