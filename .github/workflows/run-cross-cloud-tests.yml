name: Cross-Cloud Chainsaw Tests entrypoint
run-name: Cross-Cloud test testing ${{ inputs.test_scenario }} on ${{ inputs.provider }}

on:
  workflow_call:
    inputs:
      provider:
        description: 'Cloud provider to test against (e.g. eks, aks, gke)'
        required: true
        type: string
      test_scenario:
        description: 'The test suite to run (e.g. helm-chart, multi-apps)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  GITHUB_RUN_ID: ${{ github.run_id }}
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  run-test:
    runs-on: warp-ubuntu-latest-x64-8x-spot
    env:
      TF_REGION: us-east-1
      TF_DIR: ./tests-infrastructure/terraform/${{ inputs.provider }}

      CLUSTER_NAME: ${{ inputs.test_scenario }}-${{ github.run_id }}

      TF_VAR_region: us-east-1
      TF_VAR_cluster_name: ${{ inputs.test_scenario }}-${{ github.run_id }}
      TF_VAR_resource_group_name: ${{ inputs.test_scenario }}-${{ github.run_id }}
      TF_VAR_test_scenario: ${{ inputs.test_scenario }}
      TF_VAR_run_id: ${{ github.run_id }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Validate Cloud Provider Input & Directory
        run: |
          if [ -z "${{ inputs.provider }}" ]; then
            echo "❌ Error: Cloud provider input is missing!"
            exit 1
          fi

          if [ ! -d "$TF_DIR" ]; then
            echo "❌ Error: Unknown provider '${{ inputs.provider }}' or missing Terraform directory '$TF_DIR'"
            exit 1
          fi

      - name: Build Odigos CLI
        uses: ./.github/actions/build/cli

      - name: Init tofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_wrapper: false
          tofu_version: 1.9.0

      # Configure credentials for cloud provider
      - name: Configure AWS Credentials for EKS
        if: ${{ inputs.provider == 'eks' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::061717858829:role/GitHubActionsEKSCreatorRole
          aws-region: ${{ env.TF_REGION }}

      - name: Configure Azure Credentials for AKS
        if: ${{ inputs.provider == 'aks' }}
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Create test environment
      - name: Initialize OpenTofu
        run: tofu -chdir=${{ env.TF_DIR }} init

      - name: Plan OpenTofu
        run: tofu -chdir=${{ env.TF_DIR }} plan

      - name: Apply OpenTofu Configuration
        run: tofu -chdir=${{ env.TF_DIR }} apply -auto-approve

      # Configure kube config for every provider
      - name: Get kubeconfig for AKS
        if: ${{ inputs.provider == 'aks' }}
        run: |
          az aks get-credentials --resource-group ${{ env.CLUSTER_NAME }} --name ${{ env.CLUSTER_NAME }}

      - name: Get kubeconfig for EKS
        if: ${{ inputs.provider == 'eks' }}
        run: |
          aws eks update-kubeconfig --region us-east-1 --name ${{ env.CLUSTER_NAME }}

      # Test cluster access
      - name: Verify Cluster Access
        run: |
          kubectl get nodes || exit 1

      - name: Install Chainsaw
        uses: kyverno/action-install-chainsaw@v0.2.12

      - name: Install FE
        # this is used for cypress tests which are not run in every scenario
        if: ${{ inputs.test_scenario == 'multi-apps' || inputs.test_scenario == 'helm-chart' }}
        run: |
          cd frontend/webapp
          yarn install

      - name: Run E2E Tests
        run: chainsaw test tests/e2e/${{ inputs.test_scenario }}
        env:
          MODE: cross-cloud-tests
          COMMIT_HASH: ${{ github.sha }}

      - name: Run Diagnose Command
        if: always()
        run: ./cli/odigos diagnose
        continue-on-error: true

      - name: Upload Run Details Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-details-${{ inputs.provider }}-${{ inputs.test_scenario }}
          path: odigos_debug*.tar.gz
        continue-on-error: true

      - name: Destroy Resources
        if: always()
        run: tofu -chdir=$TF_DIR destroy -auto-approve

      - name: Extract Tag
        id: extract_tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
