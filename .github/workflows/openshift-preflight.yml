name: OpenShift certification for container images

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag"
        required: true

  repository_dispatch:
    types: [openshift_preflight]

permissions:
  contents: write
  packages: write

jobs:
  download-preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Tag Value
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          else
            echo "Unknown event type"
            exit 1
          fi
      - name: Notify Slack Start
        if: always()
        uses: odigos-io/ci-core/.github/actions/slack-release-notification@main
        with: 
          webhook-url: ${{ secrets.ODIGOS_RELEASE_STATUS_WEBHOOK_URL }}
          success-description: "Starting Odigos OpenShift Preflight submission"
          failure-description: "ERROR: Starting Odigos OpenShift Preflight submission"
          tag: ${{ env.TAG }}
      - name: Download OpenShift Preflight binary
        run: |
          curl -OL https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/1.14.1/preflight-linux-amd64
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: preflight-binary
          path: preflight-linux-amd64

  run-and-submit-openshift-certification:
    needs: download-preflight
    strategy:
      matrix:
        include:
          - service: autoscaler
            project_id: '6792518fe676251b15d7cf9a'
          - service: scheduler
            project_id: '679251fd5ffdc336cfb4c43f'
          - service: instrumentor
            project_id: '679251f3a8a8d04d0d10cc07'
          - service: enterprise-instrumentor
            project_id: '67c5caee54f161b7c42c5e6f'
          - service: collector
            project_id: '679252b3ea28e5acc3d38df2'
          - service: odiglet
            project_id: '6792517927c09edd021cddf1'
          - service: enterprise-odiglet
            project_id: '679bbe1fe0ccfe3f428bae2d'
          - service: ui
            project_id: '6792b077b086a666569d9935'
          - service: operator
            project_id: '67c5cadf8d089ef3612cf861'
          - service: cli
            project_id: '68fb9313337ca20d95499695'
    runs-on: ubuntu-latest
    steps:
      - name: Download Preflight Binary
        uses: actions/download-artifact@v5
        with:
          name: preflight-binary
          path: .
      
      - name: Make binary executable
        run: chmod +x preflight-linux-amd64

      - name: Determine Tag Value
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          else
            echo "Unknown event type"
            exit 1
          fi

      - name: Check Release Type
        run: |
          TAG="${{ env.TAG }}"
          
          # Check if it's a pre-release (has additional suffix after vX.Y.Z)
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+- ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
            echo "This is a pre-release: $TAG"
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
            echo "This is a stable release: $TAG"
          fi

      - name: Run Preflight
        run: |
          if [ "${{ env.IS_PRERELEASE }}" = "false" ]; then
            echo "Running preflight with --submit flag for stable release"
            ./preflight-linux-amd64 check container registry.odigos.io/odigos-${{ matrix.service }}-ubi9:${{ env.TAG }} --pyxis-api-token=${{ secrets.OPENSHIFT_PYXIS_TOKEN }} --certification-component-id ${{ matrix.project_id }} --submit
          else
            echo "Running preflight without --submit flag for pre-release"
            ./preflight-linux-amd64 check container registry.odigos.io/odigos-${{ matrix.service }}-ubi9:${{ env.TAG }} --pyxis-api-token=${{ secrets.OPENSHIFT_PYXIS_TOKEN }} --certification-component-id ${{ matrix.project_id }}
          fi


      - name: Notify Slack
        if: always()
        uses: odigos-io/ci-core/.github/actions/slack-release-notification@main
        with: 
          webhook-url: ${{ secrets.ODIGOS_RELEASE_STATUS_WEBHOOK_URL }}
          success-description: "Component ${{ matrix.service }} submitted to OpenShift Certification successfully"
          failure-description: "ERROR: failed to submit component ${{ matrix.service }} to OpenShift Certification"
          tag: ${{ env.TAG }}
