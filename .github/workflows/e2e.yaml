name: E2E Tests

on:
  workflow_run:
    workflows: ['build']
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  kubernetes-test:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: warp-ubuntu-latest-x64-8x-spot
    strategy:
      fail-fast: false
      matrix:
        kube-version:
          - '1.20.15'
          - '1.23'
          - '1.32'
        test-scenario:
          - 'ui'
          - 'multi-apps'
          - 'helm-chart'
          - 'cli-upgrade'
          - 'workload-lifecycle'
          - 'source'
          - 'source-webhooks'
        include:
          - kube-version: '1.20.15'
            kind-image: 'kindest/node:v1.20.15@sha256:a32bf55309294120616886b5338f95dd98a2f7231519c7dedcec32ba29699394'
          - kube-version: '1.23'
            kind-image: 'kindest/node:v1.23.17@sha256:14d0a9a892b943866d7e6be119a06871291c517d279aedb816a4b4bc0ec0a5b3'
          - kube-version: '1.32'
            kind-image: 'kindest/node:v1.32.0@sha256:2458b423d635d7b01637cac2d6de7e1c1dca1148a2ba2e90975e214ca849e7cb'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.23'
          check-latest: true
          cache: true
          cache-dependency-path: |
            **/go.sum

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.9.0

      - name: Install chainsaw
        uses: kyverno/action-install-chainsaw@v0.2.12

      - name: Create Kind Cluster
        uses: helm/kind-action@v1.12.0
        with:
          node_image: ${{ matrix.kind-image }}
          version: 'v0.25.0'
          cluster_name: kind
          config: tests/common/apply/kind-config.yaml

      - name: Download Docker Images
        uses: actions/download-artifact@v4
        with:
          pattern: '*-image'
          path: /tmp/images
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Load Images to Kind
        run: |
          for image in /tmp/images/*.tar; do
            # Load the OCI image and get its ID
            docker load -i "$image"
            # Get the image name with e2e-test tag
            image_name=$(docker images --format "{{.Repository}}:e2e-test" | grep "odigos" | head -n 1)
            # Load the image into kind
            kind load docker-image "$image_name" --name kind
          done

      - name: Download CLI binary
        uses: actions/download-artifact@v4
        with:
          name: odigos-cli
          path: cli/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - run: chmod +x cli/odigos

      - name: Run E2E Tests
        run: |
          chainsaw test tests/e2e/${{ matrix.test-scenario }}
