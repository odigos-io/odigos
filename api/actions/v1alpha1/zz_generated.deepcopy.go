//go:build !ignore_autogenerated

/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/odigos-io/odigos/common"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddClusterInfo) DeepCopyInto(out *AddClusterInfo) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddClusterInfo.
func (in *AddClusterInfo) DeepCopy() *AddClusterInfo {
	if in == nil {
		return nil
	}
	out := new(AddClusterInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AddClusterInfo) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddClusterInfoList) DeepCopyInto(out *AddClusterInfoList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AddClusterInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddClusterInfoList.
func (in *AddClusterInfoList) DeepCopy() *AddClusterInfoList {
	if in == nil {
		return nil
	}
	out := new(AddClusterInfoList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AddClusterInfoList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddClusterInfoSpec) DeepCopyInto(out *AddClusterInfoSpec) {
	*out = *in
	if in.Signals != nil {
		in, out := &in.Signals, &out.Signals
		*out = make([]common.ObservabilitySignal, len(*in))
		copy(*out, *in)
	}
	if in.ClusterAttributes != nil {
		in, out := &in.ClusterAttributes, &out.ClusterAttributes
		*out = make([]OtelAttributeWithValue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddClusterInfoSpec.
func (in *AddClusterInfoSpec) DeepCopy() *AddClusterInfoSpec {
	if in == nil {
		return nil
	}
	out := new(AddClusterInfoSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddClusterInfoStatus) DeepCopyInto(out *AddClusterInfoStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddClusterInfoStatus.
func (in *AddClusterInfoStatus) DeepCopy() *AddClusterInfoStatus {
	if in == nil {
		return nil
	}
	out := new(AddClusterInfoStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteAttribute) DeepCopyInto(out *DeleteAttribute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteAttribute.
func (in *DeleteAttribute) DeepCopy() *DeleteAttribute {
	if in == nil {
		return nil
	}
	out := new(DeleteAttribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeleteAttribute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteAttributeList) DeepCopyInto(out *DeleteAttributeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeleteAttribute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteAttributeList.
func (in *DeleteAttributeList) DeepCopy() *DeleteAttributeList {
	if in == nil {
		return nil
	}
	out := new(DeleteAttributeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeleteAttributeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteAttributeSpec) DeepCopyInto(out *DeleteAttributeSpec) {
	*out = *in
	if in.Signals != nil {
		in, out := &in.Signals, &out.Signals
		*out = make([]common.ObservabilitySignal, len(*in))
		copy(*out, *in)
	}
	if in.AttributeNamesToDelete != nil {
		in, out := &in.AttributeNamesToDelete, &out.AttributeNamesToDelete
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteAttributeSpec.
func (in *DeleteAttributeSpec) DeepCopy() *DeleteAttributeSpec {
	if in == nil {
		return nil
	}
	out := new(DeleteAttributeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteAttributeStatus) DeepCopyInto(out *DeleteAttributeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteAttributeStatus.
func (in *DeleteAttributeStatus) DeepCopy() *DeleteAttributeStatus {
	if in == nil {
		return nil
	}
	out := new(DeleteAttributeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorSampler) DeepCopyInto(out *ErrorSampler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorSampler.
func (in *ErrorSampler) DeepCopy() *ErrorSampler {
	if in == nil {
		return nil
	}
	out := new(ErrorSampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ErrorSampler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorSamplerList) DeepCopyInto(out *ErrorSamplerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ErrorSampler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorSamplerList.
func (in *ErrorSamplerList) DeepCopy() *ErrorSamplerList {
	if in == nil {
		return nil
	}
	out := new(ErrorSamplerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ErrorSamplerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorSamplerSpec) DeepCopyInto(out *ErrorSamplerSpec) {
	*out = *in
	if in.Signals != nil {
		in, out := &in.Signals, &out.Signals
		*out = make([]common.ObservabilitySignal, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorSamplerSpec.
func (in *ErrorSamplerSpec) DeepCopy() *ErrorSamplerSpec {
	if in == nil {
		return nil
	}
	out := new(ErrorSamplerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorSamplerStatus) DeepCopyInto(out *ErrorSamplerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorSamplerStatus.
func (in *ErrorSamplerStatus) DeepCopy() *ErrorSamplerStatus {
	if in == nil {
		return nil
	}
	out := new(ErrorSamplerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HttpRouteFilter) DeepCopyInto(out *HttpRouteFilter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HttpRouteFilter.
func (in *HttpRouteFilter) DeepCopy() *HttpRouteFilter {
	if in == nil {
		return nil
	}
	out := new(HttpRouteFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencySampler) DeepCopyInto(out *LatencySampler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencySampler.
func (in *LatencySampler) DeepCopy() *LatencySampler {
	if in == nil {
		return nil
	}
	out := new(LatencySampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LatencySampler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencySamplerList) DeepCopyInto(out *LatencySamplerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LatencySampler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencySamplerList.
func (in *LatencySamplerList) DeepCopy() *LatencySamplerList {
	if in == nil {
		return nil
	}
	out := new(LatencySamplerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LatencySamplerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencySamplerSpec) DeepCopyInto(out *LatencySamplerSpec) {
	*out = *in
	if in.Signals != nil {
		in, out := &in.Signals, &out.Signals
		*out = make([]common.ObservabilitySignal, len(*in))
		copy(*out, *in)
	}
	if in.EndpointsFilters != nil {
		in, out := &in.EndpointsFilters, &out.EndpointsFilters
		*out = make([]HttpRouteFilter, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencySamplerSpec.
func (in *LatencySamplerSpec) DeepCopy() *LatencySamplerSpec {
	if in == nil {
		return nil
	}
	out := new(LatencySamplerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LatencySamplerStatus) DeepCopyInto(out *LatencySamplerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LatencySamplerStatus.
func (in *LatencySamplerStatus) DeepCopy() *LatencySamplerStatus {
	if in == nil {
		return nil
	}
	out := new(LatencySamplerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OtelAttributeWithValue) DeepCopyInto(out *OtelAttributeWithValue) {
	*out = *in
	if in.AttributeStringValue != nil {
		in, out := &in.AttributeStringValue, &out.AttributeStringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OtelAttributeWithValue.
func (in *OtelAttributeWithValue) DeepCopy() *OtelAttributeWithValue {
	if in == nil {
		return nil
	}
	out := new(OtelAttributeWithValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProbabilisticSampler) DeepCopyInto(out *ProbabilisticSampler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbabilisticSampler.
func (in *ProbabilisticSampler) DeepCopy() *ProbabilisticSampler {
	if in == nil {
		return nil
	}
	out := new(ProbabilisticSampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProbabilisticSampler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProbabilisticSamplerList) DeepCopyInto(out *ProbabilisticSamplerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProbabilisticSampler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbabilisticSamplerList.
func (in *ProbabilisticSamplerList) DeepCopy() *ProbabilisticSamplerList {
	if in == nil {
		return nil
	}
	out := new(ProbabilisticSamplerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProbabilisticSamplerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProbabilisticSamplerSpec) DeepCopyInto(out *ProbabilisticSamplerSpec) {
	*out = *in
	if in.Signals != nil {
		in, out := &in.Signals, &out.Signals
		*out = make([]common.ObservabilitySignal, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbabilisticSamplerSpec.
func (in *ProbabilisticSamplerSpec) DeepCopy() *ProbabilisticSamplerSpec {
	if in == nil {
		return nil
	}
	out := new(ProbabilisticSamplerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProbabilisticSamplerStatus) DeepCopyInto(out *ProbabilisticSamplerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbabilisticSamplerStatus.
func (in *ProbabilisticSamplerStatus) DeepCopy() *ProbabilisticSamplerStatus {
	if in == nil {
		return nil
	}
	out := new(ProbabilisticSamplerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameAttribute) DeepCopyInto(out *RenameAttribute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameAttribute.
func (in *RenameAttribute) DeepCopy() *RenameAttribute {
	if in == nil {
		return nil
	}
	out := new(RenameAttribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RenameAttribute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameAttributeList) DeepCopyInto(out *RenameAttributeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RenameAttribute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameAttributeList.
func (in *RenameAttributeList) DeepCopy() *RenameAttributeList {
	if in == nil {
		return nil
	}
	out := new(RenameAttributeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RenameAttributeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameAttributeSpec) DeepCopyInto(out *RenameAttributeSpec) {
	*out = *in
	if in.Signals != nil {
		in, out := &in.Signals, &out.Signals
		*out = make([]common.ObservabilitySignal, len(*in))
		copy(*out, *in)
	}
	if in.Renames != nil {
		in, out := &in.Renames, &out.Renames
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameAttributeSpec.
func (in *RenameAttributeSpec) DeepCopy() *RenameAttributeSpec {
	if in == nil {
		return nil
	}
	out := new(RenameAttributeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameAttributeStatus) DeepCopyInto(out *RenameAttributeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameAttributeStatus.
func (in *RenameAttributeStatus) DeepCopy() *RenameAttributeStatus {
	if in == nil {
		return nil
	}
	out := new(RenameAttributeStatus)
	in.DeepCopyInto(out)
	return out
}
