/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	odigosv1alpha1 "github.com/odigos-io/odigos/api/odigos/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SourceLister helps list Sources.
// All objects returned here must be treated as read-only.
type SourceLister interface {
	// List lists all Sources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*odigosv1alpha1.Source, err error)
	// Sources returns an object that can list and get Sources.
	Sources(namespace string) SourceNamespaceLister
	SourceListerExpansion
}

// sourceLister implements the SourceLister interface.
type sourceLister struct {
	listers.ResourceIndexer[*odigosv1alpha1.Source]
}

// NewSourceLister returns a new SourceLister.
func NewSourceLister(indexer cache.Indexer) SourceLister {
	return &sourceLister{listers.New[*odigosv1alpha1.Source](indexer, odigosv1alpha1.Resource("source"))}
}

// Sources returns an object that can list and get Sources.
func (s *sourceLister) Sources(namespace string) SourceNamespaceLister {
	return sourceNamespaceLister{listers.NewNamespaced[*odigosv1alpha1.Source](s.ResourceIndexer, namespace)}
}

// SourceNamespaceLister helps list and get Sources.
// All objects returned here must be treated as read-only.
type SourceNamespaceLister interface {
	// List lists all Sources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*odigosv1alpha1.Source, err error)
	// Get retrieves the Source from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*odigosv1alpha1.Source, error)
	SourceNamespaceListerExpansion
}

// sourceNamespaceLister implements the SourceNamespaceLister
// interface.
type sourceNamespaceLister struct {
	listers.ResourceIndexer[*odigosv1alpha1.Source]
}
