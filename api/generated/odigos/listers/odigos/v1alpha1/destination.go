/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/odigos-io/odigos/api/odigos/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// DestinationLister helps list Destinations.
// All objects returned here must be treated as read-only.
type DestinationLister interface {
	// List lists all Destinations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Destination, err error)
	// Destinations returns an object that can list and get Destinations.
	Destinations(namespace string) DestinationNamespaceLister
	DestinationListerExpansion
}

// destinationLister implements the DestinationLister interface.
type destinationLister struct {
	listers.ResourceIndexer[*v1alpha1.Destination]
}

// NewDestinationLister returns a new DestinationLister.
func NewDestinationLister(indexer cache.Indexer) DestinationLister {
	return &destinationLister{listers.New[*v1alpha1.Destination](indexer, v1alpha1.Resource("destination"))}
}

// Destinations returns an object that can list and get Destinations.
func (s *destinationLister) Destinations(namespace string) DestinationNamespaceLister {
	return destinationNamespaceLister{listers.NewNamespaced[*v1alpha1.Destination](s.ResourceIndexer, namespace)}
}

// DestinationNamespaceLister helps list and get Destinations.
// All objects returned here must be treated as read-only.
type DestinationNamespaceLister interface {
	// List lists all Destinations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Destination, err error)
	// Get retrieves the Destination from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Destination, error)
	DestinationNamespaceListerExpansion
}

// destinationNamespaceLister implements the DestinationNamespaceLister
// interface.
type destinationNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Destination]
}
