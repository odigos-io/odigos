/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/odigos-io/odigos/api/odigos/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// InstrumentationInstanceLister helps list InstrumentationInstances.
// All objects returned here must be treated as read-only.
type InstrumentationInstanceLister interface {
	// List lists all InstrumentationInstances in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstrumentationInstance, err error)
	// InstrumentationInstances returns an object that can list and get InstrumentationInstances.
	InstrumentationInstances(namespace string) InstrumentationInstanceNamespaceLister
	InstrumentationInstanceListerExpansion
}

// instrumentationInstanceLister implements the InstrumentationInstanceLister interface.
type instrumentationInstanceLister struct {
	listers.ResourceIndexer[*v1alpha1.InstrumentationInstance]
}

// NewInstrumentationInstanceLister returns a new InstrumentationInstanceLister.
func NewInstrumentationInstanceLister(indexer cache.Indexer) InstrumentationInstanceLister {
	return &instrumentationInstanceLister{listers.New[*v1alpha1.InstrumentationInstance](indexer, v1alpha1.Resource("instrumentationinstance"))}
}

// InstrumentationInstances returns an object that can list and get InstrumentationInstances.
func (s *instrumentationInstanceLister) InstrumentationInstances(namespace string) InstrumentationInstanceNamespaceLister {
	return instrumentationInstanceNamespaceLister{listers.NewNamespaced[*v1alpha1.InstrumentationInstance](s.ResourceIndexer, namespace)}
}

// InstrumentationInstanceNamespaceLister helps list and get InstrumentationInstances.
// All objects returned here must be treated as read-only.
type InstrumentationInstanceNamespaceLister interface {
	// List lists all InstrumentationInstances in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstrumentationInstance, err error)
	// Get retrieves the InstrumentationInstance from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstrumentationInstance, error)
	InstrumentationInstanceNamespaceListerExpansion
}

// instrumentationInstanceNamespaceLister implements the InstrumentationInstanceNamespaceLister
// interface.
type instrumentationInstanceNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.InstrumentationInstance]
}
