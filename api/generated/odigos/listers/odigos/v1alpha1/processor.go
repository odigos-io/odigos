/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/odigos-io/odigos/api/odigos/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ProcessorLister helps list Processors.
// All objects returned here must be treated as read-only.
type ProcessorLister interface {
	// List lists all Processors in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Processor, err error)
	// Processors returns an object that can list and get Processors.
	Processors(namespace string) ProcessorNamespaceLister
	ProcessorListerExpansion
}

// processorLister implements the ProcessorLister interface.
type processorLister struct {
	listers.ResourceIndexer[*v1alpha1.Processor]
}

// NewProcessorLister returns a new ProcessorLister.
func NewProcessorLister(indexer cache.Indexer) ProcessorLister {
	return &processorLister{listers.New[*v1alpha1.Processor](indexer, v1alpha1.Resource("processor"))}
}

// Processors returns an object that can list and get Processors.
func (s *processorLister) Processors(namespace string) ProcessorNamespaceLister {
	return processorNamespaceLister{listers.NewNamespaced[*v1alpha1.Processor](s.ResourceIndexer, namespace)}
}

// ProcessorNamespaceLister helps list and get Processors.
// All objects returned here must be treated as read-only.
type ProcessorNamespaceLister interface {
	// List lists all Processors in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Processor, err error)
	// Get retrieves the Processor from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Processor, error)
	ProcessorNamespaceListerExpansion
}

// processorNamespaceLister implements the ProcessorNamespaceLister
// interface.
type processorNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Processor]
}
