/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CollectorsGroupMemorySettingsApplyConfiguration represents a declarative configuration of the CollectorsGroupMemorySettings type for use
// with apply.
type CollectorsGroupMemorySettingsApplyConfiguration struct {
	MemoryRequestMiB           *int `json:"memoryRequestMiB,omitempty"`
	MemoryLimiterLimitMiB      *int `json:"memoryLimiterLimitMiB,omitempty"`
	MemoryLimiterSpikeLimitMiB *int `json:"memoryLimiterSpikeLimitMiB,omitempty"`
	GomemlimitMiB              *int `json:"gomemlimitMiB,omitempty"`
}

// CollectorsGroupMemorySettingsApplyConfiguration constructs a declarative configuration of the CollectorsGroupMemorySettings type for use with
// apply.
func CollectorsGroupMemorySettings() *CollectorsGroupMemorySettingsApplyConfiguration {
	return &CollectorsGroupMemorySettingsApplyConfiguration{}
}

// WithMemoryRequestMiB sets the MemoryRequestMiB field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemoryRequestMiB field is set to the value of the last call.
func (b *CollectorsGroupMemorySettingsApplyConfiguration) WithMemoryRequestMiB(value int) *CollectorsGroupMemorySettingsApplyConfiguration {
	b.MemoryRequestMiB = &value
	return b
}

// WithMemoryLimiterLimitMiB sets the MemoryLimiterLimitMiB field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemoryLimiterLimitMiB field is set to the value of the last call.
func (b *CollectorsGroupMemorySettingsApplyConfiguration) WithMemoryLimiterLimitMiB(value int) *CollectorsGroupMemorySettingsApplyConfiguration {
	b.MemoryLimiterLimitMiB = &value
	return b
}

// WithMemoryLimiterSpikeLimitMiB sets the MemoryLimiterSpikeLimitMiB field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemoryLimiterSpikeLimitMiB field is set to the value of the last call.
func (b *CollectorsGroupMemorySettingsApplyConfiguration) WithMemoryLimiterSpikeLimitMiB(value int) *CollectorsGroupMemorySettingsApplyConfiguration {
	b.MemoryLimiterSpikeLimitMiB = &value
	return b
}

// WithGomemlimitMiB sets the GomemlimitMiB field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GomemlimitMiB field is set to the value of the last call.
func (b *CollectorsGroupMemorySettingsApplyConfiguration) WithGomemlimitMiB(value int) *CollectorsGroupMemorySettingsApplyConfiguration {
	b.GomemlimitMiB = &value
	return b
}
