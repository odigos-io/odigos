/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	actionsv1alpha1 "github.com/odigos-io/odigos/api/actions/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// K8sAttributesLister helps list K8sAttributes.
// All objects returned here must be treated as read-only.
type K8sAttributesLister interface {
	// List lists all K8sAttributes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*actionsv1alpha1.K8sAttributes, err error)
	// K8sAttributes returns an object that can list and get K8sAttributes.
	K8sAttributes(namespace string) K8sAttributesNamespaceLister
	K8sAttributesListerExpansion
}

// k8sAttributesLister implements the K8sAttributesLister interface.
type k8sAttributesLister struct {
	listers.ResourceIndexer[*actionsv1alpha1.K8sAttributes]
}

// NewK8sAttributesLister returns a new K8sAttributesLister.
func NewK8sAttributesLister(indexer cache.Indexer) K8sAttributesLister {
	return &k8sAttributesLister{listers.New[*actionsv1alpha1.K8sAttributes](indexer, actionsv1alpha1.Resource("k8sattributes"))}
}

// K8sAttributes returns an object that can list and get K8sAttributes.
func (s *k8sAttributesLister) K8sAttributes(namespace string) K8sAttributesNamespaceLister {
	return k8sAttributesNamespaceLister{listers.NewNamespaced[*actionsv1alpha1.K8sAttributes](s.ResourceIndexer, namespace)}
}

// K8sAttributesNamespaceLister helps list and get K8sAttributes.
// All objects returned here must be treated as read-only.
type K8sAttributesNamespaceLister interface {
	// List lists all K8sAttributes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*actionsv1alpha1.K8sAttributes, err error)
	// Get retrieves the K8sAttributes from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*actionsv1alpha1.K8sAttributes, error)
	K8sAttributesNamespaceListerExpansion
}

// k8sAttributesNamespaceLister implements the K8sAttributesNamespaceLister
// interface.
type k8sAttributesNamespaceLister struct {
	listers.ResourceIndexer[*actionsv1alpha1.K8sAttributes]
}
