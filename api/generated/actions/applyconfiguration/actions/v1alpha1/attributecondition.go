/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// AttributeConditionApplyConfiguration represents a declarative configuration of the AttributeCondition type for use
// with apply.
type AttributeConditionApplyConfiguration struct {
	StringCondition  *StringAttributeConditionApplyConfiguration  `json:"string_condition,omitempty"`
	NumberCondition  *NumberAttributeConditionApplyConfiguration  `json:"number_condition,omitempty"`
	BooleanCondition *BooleanAttributeConditionApplyConfiguration `json:"boolean_condition,omitempty"`
	JsonCondition    *JsonAttributeConditionApplyConfiguration    `json:"json_condition,omitempty"`
}

// AttributeConditionApplyConfiguration constructs a declarative configuration of the AttributeCondition type for use with
// apply.
func AttributeCondition() *AttributeConditionApplyConfiguration {
	return &AttributeConditionApplyConfiguration{}
}

// WithStringCondition sets the StringCondition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StringCondition field is set to the value of the last call.
func (b *AttributeConditionApplyConfiguration) WithStringCondition(value *StringAttributeConditionApplyConfiguration) *AttributeConditionApplyConfiguration {
	b.StringCondition = value
	return b
}

// WithNumberCondition sets the NumberCondition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NumberCondition field is set to the value of the last call.
func (b *AttributeConditionApplyConfiguration) WithNumberCondition(value *NumberAttributeConditionApplyConfiguration) *AttributeConditionApplyConfiguration {
	b.NumberCondition = value
	return b
}

// WithBooleanCondition sets the BooleanCondition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BooleanCondition field is set to the value of the last call.
func (b *AttributeConditionApplyConfiguration) WithBooleanCondition(value *BooleanAttributeConditionApplyConfiguration) *AttributeConditionApplyConfiguration {
	b.BooleanCondition = value
	return b
}

// WithJsonCondition sets the JsonCondition field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the JsonCondition field is set to the value of the last call.
func (b *AttributeConditionApplyConfiguration) WithJsonCondition(value *JsonAttributeConditionApplyConfiguration) *AttributeConditionApplyConfiguration {
	b.JsonCondition = value
	return b
}
