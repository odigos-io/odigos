/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// K8sAnnotationAttributeApplyConfiguration represents a declarative configuration of the K8sAnnotationAttribute type for use
// with apply.
type K8sAnnotationAttributeApplyConfiguration struct {
	AnnotationKey *string `json:"annotationKey,omitempty"`
	AttributeKey  *string `json:"attributeKey,omitempty"`
}

// K8sAnnotationAttributeApplyConfiguration constructs a declarative configuration of the K8sAnnotationAttribute type for use with
// apply.
func K8sAnnotationAttribute() *K8sAnnotationAttributeApplyConfiguration {
	return &K8sAnnotationAttributeApplyConfiguration{}
}

// WithAnnotationKey sets the AnnotationKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AnnotationKey field is set to the value of the last call.
func (b *K8sAnnotationAttributeApplyConfiguration) WithAnnotationKey(value string) *K8sAnnotationAttributeApplyConfiguration {
	b.AnnotationKey = &value
	return b
}

// WithAttributeKey sets the AttributeKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AttributeKey field is set to the value of the last call.
func (b *K8sAnnotationAttributeApplyConfiguration) WithAttributeKey(value string) *K8sAnnotationAttributeApplyConfiguration {
	b.AttributeKey = &value
	return b
}
