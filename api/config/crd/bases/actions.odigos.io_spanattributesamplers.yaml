---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    odigos.io/config: "1"
    odigos.io/system-object: "true"
  name: spanattributesamplers.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: SpanAttributeSampler
    listKind: SpanAttributeSamplerList
    plural: spanattributesamplers
    shortNames:
    - sas
    singular: spanattributesampler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SpanAttributeSamplerSpec defines the desired state of SpanAttributeSampler
            properties:
              actionName:
                type: string
              attributeFilters:
                description: Filters based on span attributes and conditions
                items:
                  description: SpanAttributeFilter allows sampling traces based on
                    span attributes and conditions.
                  properties:
                    attribute_key:
                      description: Attribute key to evaluate
                      type: string
                    condition:
                      description: |-
                        Condition to evaluate the attribute against
                        Exactly one condition type must be provided
                      properties:
                        boolean_condition:
                          description: BooleanAttributeCondition for boolean attribute
                            evaluation
                          properties:
                            expected_value:
                              description: Required only for 'equals' operation
                              type: boolean
                            operation:
                              enum:
                              - exists
                              - equals
                              type: string
                          required:
                          - operation
                          type: object
                        json_condition:
                          description: JsonAttributeCondition supports operations
                            on JSON serialized as strings
                          properties:
                            expected_value:
                              description: ExpectedValue required for equals, not_equals,
                                contains_key, not_contains_key
                              type: string
                            json_path:
                              description: JsonPath required for jsonpath_exists operation
                              type: string
                            operation:
                              enum:
                              - exists
                              - is_valid_json
                              - is_invalid_json
                              - equals
                              - not_equals
                              - contains_key
                              - not_contains_key
                              - jsonpath_exists
                              type: string
                          required:
                          - operation
                          type: object
                        number_condition:
                          description: 'NumberAttributeCondition supports numeric
                            types: int, long, float, double'
                          properties:
                            expected_value:
                              description: Required for all operations except 'exists'
                              type: number
                            operation:
                              enum:
                              - exists
                              - equals
                              - not_equals
                              - greater_than
                              - less_than
                              - greater_than_or_equal
                              - less_than_or_equal
                              type: string
                          required:
                          - operation
                          type: object
                        string_condition:
                          description: StringAttributeCondition for standard string
                            attributes.
                          properties:
                            expected_value:
                              description: Required for all except 'exists'
                              type: string
                            operation:
                              enum:
                              - exists
                              - equals
                              - not_equals
                              - contains
                              - not_contains
                              - regex
                              type: string
                          required:
                          - operation
                          type: object
                      type: object
                    fallback_sampling_ratio:
                      description: Fallback sampling ratio when the condition doesn't
                        explicitly match
                      maximum: 100
                      minimum: 0
                      type: number
                    service_name:
                      description: Specifies the service the filter applies to
                      type: string
                  required:
                  - attribute_key
                  - condition
                  - fallback_sampling_ratio
                  - service_name
                  type: object
                type: array
              disabled:
                type: boolean
              notes:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - attributeFilters
            - signals
            type: object
          status:
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
