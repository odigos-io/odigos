---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: instrumentationconfigs.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentationConfig
    listKind: InstrumentationConfigList
    plural: instrumentationconfigs
    singular: instrumentationconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstrumentationConfig is the Schema for the instrumentationconfig
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Config for the OpenTelemeetry SDKs that should be applied to a workload.
              The workload is identified by the owner reference
            properties:
              config:
                description: |-
                  config for this workload.
                  the config is a list to allow for multiple config options and values to be applied.
                  the list is processed in order, and the first matching config is applied.
                items:
                  description: |-
                    WorkloadInstrumentationConfig defined a single config option to apply
                    on a workload, along with it's value, filters and instrumentation libraries
                  properties:
                    instrumentationLibraries:
                      description: |-
                        a list of instrumentation libraries to apply this setting to
                        if a library is not in this list, the setting should not apply to it
                        and should be cleared.
                      items:
                        description: InstrumentationLibrary represents a library for
                          instrumentation
                        properties:
                          instrumentationLibraryName:
                            description: InstrumentationLibraryName is the name of
                              the instrumentation library
                            type: string
                          language:
                            description: Language is the programming language of the
                              library
                            enum:
                            - java
                            - python
                            - go
                            - dotnet
                            - javascript
                            - mysql
                            - nginx
                            - unknown
                            - ignored
                            type: string
                        required:
                        - instrumentationLibraryName
                        - language
                        type: object
                      type: array
                    optionKey:
                      description: |-
                        OptionKey is the name of the option
                        This value is transparent to the CRD and is passed as-is to the SDK.
                      type: string
                    optionValueBoolean:
                      description: OptionValueBoolean is the boolean value of the
                        option if it is a boolean
                      type: boolean
                    spanKind:
                      description: |-
                        This option allow to specify the config option for a specific span kind
                        for example, only to client spans or only to server spans.
                        it the span kind is not specified, the option will apply to all spans.
                      enum:
                      - client
                      - server
                      - producer
                      - consumer
                      - internal
                      type: string
                  required:
                  - instrumentationLibraries
                  - optionKey
                  type: object
                type: array
              runtimeDetailsInvalidated:
                description: true when the runtime details are invalidated and should
                  be recalculated
                type: boolean
              sdkConfigs:
                description: |-
                  Configuration for the OpenTelemetry SDKs that this workload should use.
                  The SDKs are identified by the programming language they are written in.
                items:
                  properties:
                    headSamplerConfig:
                      description: |-
                        HeadSamplingConfig is a set sampling rules.
                        This config currently only applies to root spans.
                        In the Future we might add another level of configuration base on the parent span (ParentBased Sampling)
                      properties:
                        attributesAndSamplerRules:
                          items:
                            description: |-
                              AttributesAndSamplerRule is a set of AttributeCondition that are ANDed together.
                              If all attribute conditions evaluate to true, the AND sampler evaluates to true,
                              and the fraction is used to determine the sampling decision.
                              If any of the attribute compare samplers evaluate to false,
                              the fraction is not used and the rule is skipped.
                              An "empty" AttributesAndSamplerRule with no attribute conditions is considered to always evaluate to true.
                              and the fraction is used to determine the sampling decision.
                              This entity is refered to a rule in Odigos terminology for head-sampling.
                            properties:
                              attributeConditions:
                                items:
                                  description: '''Operand'' represents the attributes
                                    and values that an operator acts upon in an expression'
                                  properties:
                                    key:
                                      description: attribute key (e.g. "url.path")
                                      type: string
                                    operator:
                                      description: The operator to use to compare
                                        the attribute value.
                                      enum:
                                      - equals
                                      - notEquals
                                      - endWith
                                      - startWith
                                      type: string
                                    val:
                                      description: currently only string values are
                                        supported.
                                      type: string
                                  required:
                                  - key
                                  - val
                                  type: object
                                type: array
                              fraction:
                                default: 1
                                description: |-
                                  The fraction of spans to sample, in the range [0, 1].
                                  If the fraction is 0, no spans are sampled.
                                  If the fraction is 1, all spans are sampled.
                                type: number
                            required:
                            - attributeConditions
                            - fraction
                            type: object
                          type: array
                        fallbackFraction:
                          default: 1
                          description: |-
                            Used as a fallback if all rules evaluate to false,
                            it may be empty - in this case the default value will be 1 - all spans are sampled.
                            it should be a float value in the range [0, 1] - the fraction of spans to sample.
                            a value of 0 means no spans are sampled if none of the rules evaluate to true.
                          type: number
                      required:
                      - attributesAndSamplerRules
                      - fallbackFraction
                      type: object
                    instrumentationLibraryConfigs:
                      description: configurations for the instrumentation libraries
                        the the SDK should use
                      items:
                        properties:
                          libraryId:
                            properties:
                              libraryName:
                                description: |-
                                  The name of the instrumentation library
                                  - Node.js: The name of the npm package: `@opentelemetry/instrumentation-<name>`
                                type: string
                              spanKind:
                                description: |-
                                  SpanKind is only supported by Golang and will be ignored for any other SDK language.
                                  In Go, SpanKind is used because the same instrumentation library can be utilized for different span kinds (e.g., client/server).
                                enum:
                                - client
                                - server
                                - producer
                                - consumer
                                - internal
                                type: string
                            required:
                            - libraryName
                            type: object
                          payloadCollection:
                            properties:
                              dbQuery:
                                description: rule for collecting db payloads for the
                                  mentioned workload and instrumentation libraries
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                type: object
                              httpRequest:
                                description: |-
                                  Collect HTTP request payload data when available.
                                  Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                  mimeTypes:
                                    description: |-
                                      Limit payload collection to specific mime types based on the content type header.
                                      When not specified, all mime types payloads will be collected.
                                      Empty array will make the rule ineffective.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpResponse:
                                description: |-
                                  rule for collecting the response part of an http payload.
                                  Can be a client response or a server response, depending on the instrumentation library
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                  mimeTypes:
                                    description: |-
                                      Limit payload collection to specific mime types based on the content type header.
                                      When not specified, all mime types payloads will be collected.
                                      Empty array will make the rule ineffective.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              messaging:
                                description: rule for collecting messaging payloads
                                  for the mentioned workload and instrumentation libraries
                                properties:
                                  dropPartialPayloads:
                                    description: |-
                                      If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                                    type: boolean
                                  maxPayloadLength:
                                    description: |-
                                      Maximum length of the payload to collect.
                                      If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                                    format: int64
                                    type: integer
                                type: object
                            type: object
                          traceConfig:
                            properties:
                              enabled:
                                description: |-
                                  Whether the instrumentation library is enabled to record traces.
                                  When false, it is expected that the instrumentation library does not produce any spans regardless of any other configuration.
                                  When true, the instrumentation library should produce spans according to the other configuration options.
                                  If not specified, the default value for this signal should be used (whether to enable libraries by default or not).
                                type: boolean
                            type: object
                        required:
                        - libraryId
                        type: object
                      type: array
                    language:
                      description: The language of the SDK being configured
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - mysql
                      - nginx
                      - unknown
                      - ignored
                      type: string
                    payloadCollection:
                      properties:
                        dbQuery:
                          description: rule for collecting db payloads for the mentioned
                            workload and instrumentation libraries
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                          type: object
                        httpRequest:
                          description: |-
                            Collect HTTP request payload data when available.
                            Can be a client (outgoing) request or a server (incoming) request, depending on the instrumentation library
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                            mimeTypes:
                              description: |-
                                Limit payload collection to specific mime types based on the content type header.
                                When not specified, all mime types payloads will be collected.
                                Empty array will make the rule ineffective.
                              items:
                                type: string
                              type: array
                          type: object
                        httpResponse:
                          description: |-
                            rule for collecting the response part of an http payload.
                            Can be a client response or a server response, depending on the instrumentation library
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                            mimeTypes:
                              description: |-
                                Limit payload collection to specific mime types based on the content type header.
                                When not specified, all mime types payloads will be collected.
                                Empty array will make the rule ineffective.
                              items:
                                type: string
                              type: array
                          type: object
                        messaging:
                          description: rule for collecting messaging payloads for
                            the mentioned workload and instrumentation libraries
                          properties:
                            dropPartialPayloads:
                              description: |-
                                If the payload is larger than the MaxPayloadLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                                This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                              type: boolean
                            maxPayloadLength:
                              description: |-
                                Maximum length of the payload to collect.
                                If the payload is longer than this value, it will be truncated or dropped, based on the value of `dropPartialPayloads` config option
                              format: int64
                              type: integer
                          type: object
                      type: object
                  required:
                  - language
                  - payloadCollection
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
