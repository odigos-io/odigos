// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v1/instrumentation.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstrumentationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId          *int32      `protobuf:"varint,1,opt,name=process_id,json=processId,proto3,oneof" json:"process_id,omitempty"`
	ServiceName        *string     `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3,oneof" json:"service_name,omitempty"`
	ResourceAttributes []*KeyValue `protobuf:"bytes,3,rep,name=resource_attributes,json=resourceAttributes,proto3" json:"resource_attributes,omitempty"`
	InitialConfig      []byte      `protobuf:"bytes,4,opt,name=initial_config,json=initialConfig,proto3,oneof" json:"initial_config,omitempty"`
}

func (x *InstrumentationRequest) Reset() {
	*x = InstrumentationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_instrumentation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentationRequest) ProtoMessage() {}

func (x *InstrumentationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_instrumentation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentationRequest.ProtoReflect.Descriptor instead.
func (*InstrumentationRequest) Descriptor() ([]byte, []int) {
	return file_v1_instrumentation_proto_rawDescGZIP(), []int{0}
}

func (x *InstrumentationRequest) GetProcessId() int32 {
	if x != nil && x.ProcessId != nil {
		return *x.ProcessId
	}
	return 0
}

func (x *InstrumentationRequest) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *InstrumentationRequest) GetResourceAttributes() []*KeyValue {
	if x != nil {
		return x.ResourceAttributes
	}
	return nil
}

func (x *InstrumentationRequest) GetInitialConfig() []byte {
	if x != nil {
		return x.InitialConfig
	}
	return nil
}

type InstrumentationConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId *int32 `protobuf:"varint,1,opt,name=process_id,json=processId,proto3,oneof" json:"process_id,omitempty"`
	Config    []byte `protobuf:"bytes,2,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *InstrumentationConfigRequest) Reset() {
	*x = InstrumentationConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_instrumentation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentationConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentationConfigRequest) ProtoMessage() {}

func (x *InstrumentationConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_instrumentation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentationConfigRequest.ProtoReflect.Descriptor instead.
func (*InstrumentationConfigRequest) Descriptor() ([]byte, []int) {
	return file_v1_instrumentation_proto_rawDescGZIP(), []int{1}
}

func (x *InstrumentationConfigRequest) GetProcessId() int32 {
	if x != nil && x.ProcessId != nil {
		return *x.ProcessId
	}
	return 0
}

func (x *InstrumentationConfigRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type InstrumentationCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId *int32 `protobuf:"varint,1,opt,name=process_id,json=processId,proto3,oneof" json:"process_id,omitempty"`
}

func (x *InstrumentationCloseRequest) Reset() {
	*x = InstrumentationCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_instrumentation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentationCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentationCloseRequest) ProtoMessage() {}

func (x *InstrumentationCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_instrumentation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentationCloseRequest.ProtoReflect.Descriptor instead.
func (*InstrumentationCloseRequest) Descriptor() ([]byte, []int) {
	return file_v1_instrumentation_proto_rawDescGZIP(), []int{2}
}

func (x *InstrumentationCloseRequest) GetProcessId() int32 {
	if x != nil && x.ProcessId != nil {
		return *x.ProcessId
	}
	return 0
}

var File_v1_instrumentation_proto protoreflect.FileDescriptor

var file_v1_instrumentation_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x6f, 0x64, 0x69, 0x67,
	0x6f, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x02,
	0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x79, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x50,
	0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x32, 0xc2, 0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3b, 0x2e,
	0x6f, 0x64, 0x69, 0x67, 0x6f, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x41, 0x2e, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x73, 0x2e, 0x69, 0x6f, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x40, 0x2e, 0x6f, 0x64, 0x69, 0x67,
	0x6f, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x73, 0x2e,
	0x69, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_instrumentation_proto_rawDescOnce sync.Once
	file_v1_instrumentation_proto_rawDescData = file_v1_instrumentation_proto_rawDesc
)

func file_v1_instrumentation_proto_rawDescGZIP() []byte {
	file_v1_instrumentation_proto_rawDescOnce.Do(func() {
		file_v1_instrumentation_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_instrumentation_proto_rawDescData)
	})
	return file_v1_instrumentation_proto_rawDescData
}

var file_v1_instrumentation_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_instrumentation_proto_goTypes = []interface{}{
	(*InstrumentationRequest)(nil),       // 0: odigos.io.instrumentation.plugin.v1.InstrumentationRequest
	(*InstrumentationConfigRequest)(nil), // 1: odigos.io.instrumentation.plugin.v1.InstrumentationConfigRequest
	(*InstrumentationCloseRequest)(nil),  // 2: odigos.io.instrumentation.plugin.v1.InstrumentationCloseRequest
	(*KeyValue)(nil),                     // 3: odigos.io.instrumentation.plugin.v1.KeyValue
	(*emptypb.Empty)(nil),                // 4: google.protobuf.Empty
}
var file_v1_instrumentation_proto_depIdxs = []int32{
	3, // 0: odigos.io.instrumentation.plugin.v1.InstrumentationRequest.resource_attributes:type_name -> odigos.io.instrumentation.plugin.v1.KeyValue
	0, // 1: odigos.io.instrumentation.plugin.v1.Instrumentation.Start:input_type -> odigos.io.instrumentation.plugin.v1.InstrumentationRequest
	1, // 2: odigos.io.instrumentation.plugin.v1.Instrumentation.ApplyConfig:input_type -> odigos.io.instrumentation.plugin.v1.InstrumentationConfigRequest
	2, // 3: odigos.io.instrumentation.plugin.v1.Instrumentation.Close:input_type -> odigos.io.instrumentation.plugin.v1.InstrumentationCloseRequest
	4, // 4: odigos.io.instrumentation.plugin.v1.Instrumentation.Start:output_type -> google.protobuf.Empty
	4, // 5: odigos.io.instrumentation.plugin.v1.Instrumentation.ApplyConfig:output_type -> google.protobuf.Empty
	4, // 6: odigos.io.instrumentation.plugin.v1.Instrumentation.Close:output_type -> google.protobuf.Empty
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_instrumentation_proto_init() }
func file_v1_instrumentation_proto_init() {
	if File_v1_instrumentation_proto != nil {
		return
	}
	file_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_instrumentation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_instrumentation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentationConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_instrumentation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentationCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_instrumentation_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_v1_instrumentation_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_v1_instrumentation_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_instrumentation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_instrumentation_proto_goTypes,
		DependencyIndexes: file_v1_instrumentation_proto_depIdxs,
		MessageInfos:      file_v1_instrumentation_proto_msgTypes,
	}.Build()
	File_v1_instrumentation_proto = out.File
	file_v1_instrumentation_proto_rawDesc = nil
	file_v1_instrumentation_proto_goTypes = nil
	file_v1_instrumentation_proto_depIdxs = nil
}
